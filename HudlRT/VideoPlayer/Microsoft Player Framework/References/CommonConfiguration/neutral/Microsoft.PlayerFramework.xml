<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.PlayerFramework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.PlayerFramework.ControlBehavior">
            <summary>
            Behavior to support binding a command's Enabled state to a control.
            The Execute method on the command is not fired from this, only the enabled state is affected.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ControlBehavior.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ControlBehavior.SetCommand(Windows.UI.Xaml.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets the command for a given control.
            </summary>
            <param name="obj">The dependency object to attach the command to.</param>
            <param name="propertyValue">The command to attach.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.ControlBehavior.GetCommand(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the command associated with the control.
            </summary>
            <param name="obj">The  control to get the associated command for.</param>
            <returns>The command associated with the control.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.IsCheckedBehavior">
            <summary>
            Behavior to support binding commands to this IsChecked property of a ToggleButton control.
            This is required to bind a property to the IsChecked property without the Binding getting disconnected when the user checks or unchecks the control.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.IsCheckedBehavior.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IsCheckedBehavior.SetValue(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the value to the IsChecked property of the ToggleButton control
            </summary>
            <param name="obj">The dependency object to set the IsChecked property on. This should always be a ToggleButton</param>
            <param name="propertyValue">The Value to set.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IsCheckedBehavior.GetValue(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value from with the ToggleButton's IsChecked property
            </summary>
            <param name="obj">The ToggleButton control to get the IsChecked property for.</param>
            <returns>The value associated with the IsChecked property of the ToggleButton</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.RangeBaseBehavior">
            <summary>
            Behavior to support binding commands to a RangeBase (or Slider) control
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.RangeBaseBehavior.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.RangeBaseBehavior.SetCommand(Windows.UI.Xaml.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets the command to a Selector control.
            </summary>
            <param name="obj">The dependency object to attach the command to. This should always be a RangeBase</param>
            <param name="propertyValue">The command to attach.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.RangeBaseBehavior.GetCommand(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the command associated with the Selector control.
            </summary>
            <param name="obj">The Selector control to get the associated command for.</param>
            <returns>The command associated with the selector control.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.SelectorBehavior">
            <summary>
            Behavior to support binding commands to a Selector (or ComboBox) control
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.SelectorBehavior.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.SelectorBehavior.SetCommand(Windows.UI.Xaml.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            Sets the command to a Selector control.
            </summary>
            <param name="obj">The dependency object to attach the command to. This should always be a ComboBox</param>
            <param name="propertyValue">The command to attach.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.SelectorBehavior.GetCommand(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the command associated with the Selector control.
            </summary>
            <param name="obj">The Selector control to get the associated command for.</param>
            <returns>The command associated with the selector control.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.DelegateCommand">
            <summary>
            Provides an ICommand implementation that allows delgates to be used to handle requests to the interface.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            </summary>
            <param name="executeMethod">A delegate to handle the Execute method</param>
            <param name="canExecuteMethod">A delegate to handle the CanExecute method</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.#ctor(System.Action)">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            Always returns true for CanExecute
            </summary>
            <param name="executeMethod">A delegate to handle the Execute method</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.#ctor">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            Delegates must be set separately.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.CanExecute">
            <summary>
            Indicates whether or not the command can execute without a parameter
            </summary>
            <returns>boolean indicating whether the command can execute.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.Execute">
            <summary>
            Executes the command without a parameter
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.CanExecute(System.Object)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.Execute(System.Object)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.OnCanExecuteChanged">
            <summary>
            Invokes the CanExecuteChanged event.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand.OnCanExecuteChanged(System.Object,System.Object)">
            <summary>
            Invokes the CanExecuteChanged event.
            Useful to assign as an event handler.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DelegateCommand.ExecuteMethod">
            <summary>
            The action to invoke when the Execute method is called.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DelegateCommand.CanExecuteMethod">
            <summary>
            The action to invoke when the CanExecute method is called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.DelegateCommand.CanExecuteChanged">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.DelegateCommand`1">
            <summary>
            Provides a strongly typed ICommand implementation that allows delgates to be used to handle requests to the interface.
            </summary>
            <typeparam name="T">Parameters are strongly typed to this.</typeparam>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            </summary>
            <param name="executeMethod">A delegate to handle the Execute method</param>
            <param name="canExecuteMethod">A delegate to handle the CanExecute method</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            </summary>
            <param name="executeMethod">A delegate to handle the Execute method</param>
            <param name="canExecuteMethod">A delegate to handle the CanExecute method</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            Instantiates a new instance of the DelegateCommand class.
            </summary>
            <param name="executeMethod">A delegate to handle the Execute method</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.#ctor">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.CanExecute">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.Execute">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.CanExecute(System.Object)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.DelegateCommand`1.Execute(System.Object)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.DelegateCommand`1.ExecuteParameterMethod">
            <summary>
            The strongly typed delegate to handle the Execute method with the parameter cast.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DelegateCommand`1.CanExecuteParameterMethod">
            <summary>
            The strongly typed delegate to handle the CanExecute method with the parameter cast.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ControlPanel">
            <summary>
            A MediaPlayer control panel to allow user control over audio or video.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ControlPanel.#ctor">
            <summary>
            Instantiates a new instance of the ControlPanel class.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ControlPanel.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="F:Microsoft.PlayerFramework.ControlPanel.ViewModelProperty">
            <summary>
            Identifies the MediaPlayer dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ControlPanel.GetTemplateChildren">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.ViewModel">
            <summary>
            The InteractiveMediaPlayer object used to provide state updates and serve user interaction requests.
            This is usually an instance of the MediaPlayer but could be a custom implementation to support unique interaction such as in the case of advertising.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.LeftItemsPanel">
            <summary>
            The left panel where all the controls before the timeline are placed.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.RightItemsPanel">
            <summary>
            The panel that contains all controls to the right of the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.ControlPanelElement">
            <summary>
            The main panel element containing the controls.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.LeftMarginElement">
            <summary>
            The left panel adding a margin before the first control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.ReplayButtonElement">
            <summary>
            The replay (instant replay) button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.RewindButtonElement">
            <summary>
            The rewind/reverse button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.PlayPauseButtonElement">
            <summary>
            The play and pause toggle button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.StopButtonElement">
            <summary>
            The stop button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.FastForwardButtonElement">
            <summary>
            The fast forward button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SlowMotionButtonElement">
            <summary>
            The slow motion button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SkipBackButtonElement">
            <summary>
            The skip back button (sends the user back 30 seconds in the timeline).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SkipPreviousButtonElement">
            <summary>
            The skip previous button (sends the user to the previous marker).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.ProgressTimeElement">
            <summary>
            The text that shows the current position.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.MediaSliderGridElement">
            <summary>
            The panel that contains the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.BufferingProgressBarElement">
            <summary>
            The buffering progress bar.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.DownloadProgressBarElement">
            <summary>
            The download progress bar for non-adaptive video.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.ProgressSliderElement">
            <summary>
            The timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SkipNextButtonElement">
            <summary>
            The skip next button. Sends the user to the next marker.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SkipAheadButtonElement">
            <summary>
            The skip ahead button. Sends user 30 seconds ahead in the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.TotalMediaTimeElement">
            <summary>
            The total duration of the media. This is usually mutually exclusive from the TotalTimeRemaining.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.TotalTimeRemainingElement">
            <summary>
            The time remaining in the media. This is usually mutually exclusive from the TotalMediaTime.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.CaptionsButtonElement">
            <summary>
            The Captions button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.AudioSelectorElement">
            <summary>
            The ComboBox to allow you to select an audio track.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.VolumePanelElement">
            <summary>
            The volume panel that contains the mute and volume slider (used for audio and video media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.VerticalVolumeSliderGridElement">
            <summary>
            The vertical volume slider panel (used for video media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.VerticalVolumeSliderElement">
            <summary>
            The vertical volume slider control (used for video media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.VolumeButtonElement">
            <summary>
            The mute and volume slider toggle button (used for video media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.VolumeSliderButtonElement">
            <summary>
            The button that only invokes the vertical flyout without toggling mute (used for video media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.AudioMuteButtonElement">
            <summary>
            The mute toggle button (used for audio media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.HorizontalVolumeSliderElement">
            <summary>
            The horizontal volume slider (used for audio media where you can't extend vertically).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.FullScreenButtonElement">
            <summary>
            The fullscreen toggle button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.GoLiveButtonElement">
            <summary>
            The go live button.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.SignalStrengthElement">
            <summary>
            The signal strength indicator (usually adaptive only).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ControlPanel.IsVolumeVisible">
            <summary>
            Gets or sets whether the volume panel is visible.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.AdvertisingState">
            <summary>
            Provides state related to advertising
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.AdvertisingState.None">
            <summary>
            No ad is playing.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.AdvertisingState.Loading">
            <summary>
            Ads are loading, this is before we know what kind of ad it is.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.AdvertisingState.Linear">
            <summary>
            A linear ad is playing.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.AdvertisingState.NonLinear">
            <summary>
            A non linear ad is playing.
            </summary>
        </member>
        <member name="T:System.ComponentModel.CategoryAttribute">
            <summary>
            Identifies the category of member for Blend.
            </summary>
        </member>
        <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of CategoryAttribute.
            </summary>
            <param name="category">The category name.</param>
        </member>
        <member name="T:Microsoft.PlayerFramework.AutoHideBehavior">
            <summary>
            Used to indicate how the AutoHide feature works.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.AutoHideBehavior.None">
            <summary> 
            The AutoHide feature has no special behavior.
            </summary> 
        </member>
        <member name="F:Microsoft.PlayerFramework.AutoHideBehavior.AllowDuringPlaybackOnly">
            <summary> 
            AutoHide is allowed during media playback only.
            </summary> 
        </member>
        <member name="F:Microsoft.PlayerFramework.AutoHideBehavior.PreventDuringInteractiveHover">
            <summary> 
            AutoHide is prevented when the pointer is over the control panel (and other interactive elements).
            </summary> 
        </member>
        <member name="F:Microsoft.PlayerFramework.AutoHideBehavior.All">
            <summary> 
            Apply all available AutoHide behaviors.
            </summary> 
        </member>
        <member name="T:Microsoft.PlayerFramework.InteractionType">
            <summary>
            Used to indicate the how interaction by the user causes the UI to be activated or deactivated.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.InteractionType.None">
            <summary>
            Represents no interaction.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.InteractionType.Soft">
            <summary>
            Indicates a "soft" interaction (a mouse movement in case case of interactivate activation or a timer timeout in the case of deactivation).
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.InteractionType.Hard">
            <summary>
            Indicates a "hard" interaction such as a tap or click.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.InteractionType.All">
            <summary>
            Indicates both "soft" and "hard" interactions.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaEndedBehavior">
            <summary>
            The behavior to control how the MediaPlayer should react to reaching the end of the media.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaEndedBehavior.Manual">
            <summary>
            Don't do anything (this will leave the MediaPlayer in a paused state).
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaEndedBehavior.Stop">
            <summary>
            Issue a stop (which will reset the MediaPlayer to allow it to play when the user clicks play again).
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaEndedBehavior.Reset">
            <summary>
            Reset the position to the beginning (which will put the MediaPlayer in a paused state).
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerActionEventHandler">
            <summary>
            Represents the method that will handle a MediaPlayer action.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerActionEventArgs">
            <summary>
            Contains state information and event data associated with a MediaPlayer action event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayerActionEventArgs.Handled">
            <summary>
            Gets or sets whether the event was already handled.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerPositionActionEventHandler">
            <summary>
            Represents the method that will handle a MediaPlayer action associated with a position.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerPositionActionEventArgs">
            <summary>
            Contains state information and event data associated with a MediaPlayer position action event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayerPositionActionEventArgs.Position">
            <summary>
            Gets the position associated with the event.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerMarkerActionEventHandler">
            <summary>
            Represents the method that will handle a MediaPlayer action associated with a marker.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerMarkerActionEventArgs">
            <summary>
            Contains state information and event data associated with a MediaPlayer marker action event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayerMarkerActionEventArgs.Marker">
            <summary>
            Gets the marker associated with the event.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerTemplateParts">
            <summary>
            Helper class that includes string names of template parts for the media player
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.MediaContainer">
            <summary>
            The name of the container most appropriate to place the MediaElement in
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.LoaderViewContainer">
            <summary>
            The name of the container most appropriate to place an interactive UI before the media loads
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.CaptionsContainer">
            <summary>
            The name of the container most appropriate to place closed captioning
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.AdvertisingContainer">
            <summary>
            The name of the container most appropriate to place linear advertisements
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.BufferingContainer">
            <summary>
            The name of the container most appropriate to place a buffering UI
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.ErrorsContainer">
            <summary>
            The name of the container most appropriate to place information about errors that prevent the media from playing
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.InteractivityContainer">
            <summary>
            The name of the container most appropriate to place interactive UI elements such as the control panel
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.SettingsContainer">
            <summary>
            The name of the container most appropriate to place settings dialogs
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayerTemplateParts.ControlPanel">
            <summary>
            The name of the control panel element
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaQuality">
            <summary>
            Enumeration to denote the various quality levels of media
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaQuality.StandardDefinition">
            <summary>
            Typically indicates less than 720p media quality
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaQuality.HighDefinition">
            <summary>
            Typically indicates greater than or equal to 720p media quality
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlayerState">
            <summary>
            Enum used to describe the player state. This is is different from the MediaState in that it indicates what stage of loading the media the player is in.
            Once the media is loaded, you should use CurrentState to examine the state of the media.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Unloaded">
            <summary>
            The player is unloaded, no source is set.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Pending">
            <summary>
            The source is set but the player is waiting to load the media due to AutoLoad=false
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Loading">
            <summary>
            The source is set and everything is ready to go but there are actions from the MediaLoading event that are still executing.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Loaded">
            <summary>
            The media has been loaded into the player but the media has not been opened yet.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Opened">
            <summary>
            The media has been loaded and opened. This happens immediately before MediaOpened fires.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Starting">
            <summary>
            The media has been told to start but there may be an async operation that needs to be performed first.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Started">
            <summary>
            The media has been started and is either playing or paused.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Ending">
            <summary>
            The media has finished playing and is in the process of ending. There may be async operations taking place now such as playing post roll ads.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlayerState.Failed">
            <summary>
            The media has failed and has been unloaded. You must set the source again on the player to load the media.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlayTimeTrackingPlugin">
            <summary>
            A plugin used to help track when specific events occur during playback.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.TrackingPluginBase`1">
            <summary>
            A plugin used to help track when specific events occur during playback.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PluginBase">
            <summary>
            Provides a base class to make it easy to implement a plugin
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.IPlugin">
            <summary>
            An interface describing the contract for a MMP: Player Framework plugin.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IPlugin.Load">
            <summary>
            The plugin is loaded. This occurs after MediaPlayer is set.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IPlugin.Update(Microsoft.PlayerFramework.IMediaSource)">
            <summary>
            The MediaPlayer is updating the source.
            </summary>
            <param name="mediaSource">The new source and associated properties required to control initial state and desired playback behavior.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IPlugin.Unload">
            <summary>
            The plugin is no longer being used and should unload.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IPlugin.MediaPlayer">
            <summary>
            The MediaPlayer the plugin is attached to.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.OnLoad">
            <summary>
            Can be overridden in order to get notification of the plugin being loaded.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.OnUpdate">
            <summary>
            Can be overridden to get notification of the plugin being updated.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.OnUnload">
            <summary>
            Can be overridden in order to get notification of the plugin being unloaded.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.OnActivate">
            <summary>
            Activates the plugin at the appropriate time.
            </summary>
            <returns>A boolean indicating whether or not it was successfully activated.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.OnDeactivate">
            <summary>
            Deactivates the plugin at the appropriate time.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PluginBase.IsEnabledProperty">
            <summary>
            Identifies the IsEnabled attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.SetIsEnabled(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsEnabled attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
            <param name="propertyValue">A value indicating if the plugin should be enabled.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PluginBase.GetIsEnabled(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsEnabled attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
            <returns>A value indicating if the plugin should be enabled.</returns>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginBase.CurrentMediaSource">
            <summary>
            Gets the current IMediaSource implemenation being used by the player framework.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginBase.IsLoaded">
            <summary>
            Gets whether or not the plugin is loaded.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginBase.IsActive">
            <summary>
            Gets whether or not the plugin is activate.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginBase.IsEnabled">
            <summary>
            Gets or sets if the plugin is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginBase.MediaPlayer">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.IEventTracker">
            <summary>
            An interface used to implement a tracking plugin.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IEventTracker.EventTracked">
            <summary>
            Raised when a tracking event occurs
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.#ctor">
            <summary>
            Creates a new instance of TrackingPlugin.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TrackingPluginBase`1.TrackingEventsProperty">
            <summary>
            Identifies the PreloadTime dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.OnTrackEvent(Microsoft.PlayerFramework.EventTrackedEventArgs)">
            <summary>
            Manually fires an event
            </summary>
            <param name="trackingEvent">The event to fire</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.UninitializeTrackingEvents(System.Collections.Generic.IList{`0})">
            <summary>
            Unsubscribes all tracking events.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.InitializeTrackingEvents(System.Collections.Generic.IList{`0})">
            <summary>
            Subscribes all tracking events.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.InitializeTrackingEvent(`0)">
            <summary>
            Provides an opportunity to initialize an individual tracking event.
            </summary>
            <param name="trackingEvent">The tracking event being subscribed to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.UninitializeTrackingEvent(`0)">
            <summary>
            Provides an opportunity to uninitialize an individual tracking event.
            </summary>
            <param name="trackingEvent">The tracking event being unsubscribed.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.OnUpdate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.TrackingPluginBase`1.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.TrackingPluginBase`1.EventTracked">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.TrackingPluginBase`1.TrackingEvents">
            <summary>
            Gets or sets the amount of time before an ad will occur that preloading will begin. Set to null to disable preloading. Default is 5 seconds.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlayTimeTrackingPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PlayTimeTrackingPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlayTimeTrackingPlugin.PlayTime">
            <summary>
            Gets the total time watched in the current session. Reset when new media is loaded but not reset when media plays to the end, loops, or restarts.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlayTimeTrackingPlugin.PlayTimePercentage">
            <summary>
            Gets or sets the percentage of time compared to the duration that the media has been played before the tracking event will fire.
            .5 = 50%, 2 = 200%
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlayTimeTrackingEvent">
            <summary>
            Used to identify and track when the media has been played a specified amount of time.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.TrackingEventBase">
            <summary>
            A base class that all tracking events inherit.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.TrackingEventBase.Data">
            <summary>
            Gets or sets extra data associated with a tracking event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlayTimeTrackingEvent.PlayTime">
            <summary>
            Gets or sets the absolute amount of time that the media has been played before the tracking event will fire.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlayTimeTrackingEvent.PlayTimePercentage">
            <summary>
            Gets or sets the percentage of time compared to the duration that the media has been played before the tracking event will fire.
            .5 = 50%, 2 = 200%
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.EventTrackedEventArgs">
            <summary>
            Contains additional information about a tracking event that has occurred.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.EventTrackedEventArgs.#ctor">
            <summary>
            Creates a new instance of EventTrackedEventArgs
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.EventTrackedEventArgs.#ctor(Microsoft.PlayerFramework.TrackingEventBase)">
            <summary>
            Creates a new instance of EventTrackedEventArgs
            </summary>
            <param name="trackingEvent">The event that was tracked</param>
        </member>
        <member name="P:Microsoft.PlayerFramework.EventTrackedEventArgs.Timestamp">
            <summary>
            Gets the timestamp when the event occurred.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.EventTrackedEventArgs.TrackingEvent">
            <summary>
            Gets the tracking event instance that occurred.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlaylistCommands">
            <summary>
            Provides a set of commands that can be used to control the PlaylistPlugin. Useful for binding in Xaml
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistCommands.#ctor">
            <summary>
            Creates a new instance of the PlaylistCommands class.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistCommands.PlaylistPluginProperty">
            <summary>
            Identifies the PlaylistPlugin dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistCommands.PreviousPlaylistItemCommand">
            <summary>
            Gets a command to return to the previous playlist item.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistCommands.NextPlaylistItemCommand">
            <summary>
            Gets a command to advance to the next playlist item.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistCommands.PlaylistPlugin">
            <summary>
            Gets or sets the instance of the PlaylistPlugin that the commands should operate on.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlaylistItemMetadata">
            <summary>
            Helper class used to attach config data specific to each playlist item.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItemMetadata.TitleProperty">
            <summary>
            Identifies the Title attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.SetTitle(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the Title attached property value.
            </summary>
            <param name="obj">An instance of the PlaylistItem.</param>
            <param name="propertyValue">A value containing the title of the PlaylistItem.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.GetTitle(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Title attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItemMetadata.DescriptionProperty">
            <summary>
            Identifies the Description attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.SetDescription(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the Description attached property value.
            </summary>
            <param name="obj">An instance of the PlaylistItem.</param>
            <param name="propertyValue">A value containing the description of the PlaylistItem.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.GetDescription(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Description attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItemMetadata.ThumbnailProperty">
            <summary>
            Identifies the Thumbnail attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.SetThumbnail(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Sets the Thumbnail attached property value.
            </summary>
            <param name="obj">An instance of the PlaylistItem.</param>
            <param name="propertyValue">A value containing the thumbnail image of the PlaylistItem.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.GetThumbnail(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Thumbnail attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItemMetadata.DurationProperty">
            <summary>
            Identifies the Duration attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.SetDuration(Windows.UI.Xaml.DependencyObject,System.TimeSpan)">
            <summary>
            Sets the Duration attached property value.
            </summary>
            <param name="obj">An instance of the PlaylistItem.</param>
            <param name="propertyValue">A value containing the duration of the PlaylistItem.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItemMetadata.GetDuration(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Duration attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionRoutedEventArgs">
            <summary>
            EventArgs associated with a Position in the media.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionRoutedEventArgs.Position">
            <summary>
            The position associated with the event.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.SeekRoutedEventArgs">
            <summary>
            EventArgs associated with a Position in the media.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekRoutedEventArgs.PreviousPosition">
            <summary>
            The position associated with the event.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ScrubRoutedEventArgs">
            <summary>
            EventArgs associated with a scrubbing operation.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ScrubRoutedEventArgs.Canceled">
            <summary>
            Indicates that action should be aborted.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ScrubProgressRoutedEventArgs">
            <summary>
            EventArgs associated with a scrubbing operation that is in progress.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ScrubProgressRoutedEventArgs.StartPosition">
            <summary>
            The position when scrubbing started
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.RoutedPropertyChangedEventHandler`1">
            <summary>
            Represents methods that will handle various routed events that track property value changes.
            </summary>
            <typeparam name="T">The type of the property value where changes in value are reported.</typeparam>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Windows.UI.Xaml.RoutedPropertyChangedEventArgs`1">
            <summary>
            Provides data about a change in value to a dependency property as reported by particular routed events, including hte previous and current value of the property that changed.
            </summary>
            <typeparam name="T">The type of the dependency property that has changed.</typeparam>
        </member>
        <member name="M:Windows.UI.Xaml.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Creates a new instance of RoutedPropertyChangedEventArgs.
            </summary>
            <param name="oldValue">the previous value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="P:Windows.UI.Xaml.RoutedPropertyChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value of the property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.RoutedPropertyChangedEventArgs`1.OldValue">
            <summary>
            Gets the previous value of the property.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerDeferrableEventArgs">
            <summary>
            Provides data for a deferrable event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayerDeferrableEventArgs.DeferrableOperation">
            <summary>
            Gets the deferrable operation.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerDeferrableOperation">
            <summary>
            Provides info about a deferrable operation.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayerDeferrableOperation.GetDeferral">
            <summary>
            Requests that the deferrable operation be delayed.
            </summary>
            <returns>The deferral.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayerDeferral">
            <summary>
            Manages a delayed app deferrable operation.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayerDeferral.Complete">
            <summary>
            Notifies the MediaPlayer that the operation is complete.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayerDeferral.Cancel">
            <summary>
            Notifies the MediaPlayer that the operation should be cancelled.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayerDeferral.CancellationToken">
            <summary>
            Gets the CancellationToken associated with this class.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.SelectedAudioStreamChangedEventArgs">
            <summary>
            Contains state information and event data associated with the SelectedAudioStreamChanged event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SelectedAudioStreamChangedEventArgs.Handled">
            <summary>
            Gets or sets whether the event handler took responsibility for modifying the selected audio stream.
            Setting to true will prevent the MediaPlayer from setting the AudioStreamIndex property automatically.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.InteractiveViewModel">
            <summary>
            Provides an IInteractiveViewModel implementation for MediaPlayer
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.InteractiveViewModelBase">
            <summary>
            Provides a base class to help implement IInteractiveViewModel
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.IInteractiveViewModel">
            <summary>
            Provides an interface to control media interactivity. 
            The MediaPlayer implements this by default but a plugin could also provide an implementation for features like advertising.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.OnInteracting(Microsoft.PlayerFramework.InteractionType)">
            <summary>
            Can be called by UI elements to indicate that the user is interacting
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SetSlowMotion(System.Boolean)">
            <summary>
            Toggles the slow motion feature.
            </summary>
            <param name="slowMotion">true for SlowMotion, false for normal speed.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SetMuted(System.Boolean)">
            <summary>
            Toggles the mute feature.
            </summary>
            <param name="muted">true for mute, false to hear audio.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SetFullScreen(System.Boolean)">
            <summary>
            Toggles the full screen feature
            </summary>
            <param name="fullScreen">true for fullscreen, false for normal size.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.InvokeCaptions">
            <summary>
            Invokes the closed captioning feature.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.InvokeAudioSelection">
            <summary>
            Invokes the audio stream selection feature.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SetVolume(System.Double)">
            <summary>
            Sets the volume.
            </summary>
            <param name="volume">The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.GoLive">
            <summary>
            Seeks to the live position on the media. Only supported during live media playback.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.Scrub(System.TimeSpan,System.Boolean@)">
            <summary>
            Actively scrubbing at the indicated position.
            </summary>
            <param name="position">The position on the timeline that the user is actively scrubbing over.</param>
            <param name="canceled">Gets or sets whether the operation should be cancelled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.StartScrub(System.TimeSpan,System.Boolean@)">
            <summary>
            A scrub action has been initiated.
            </summary>
            <param name="position">The position that the scrubbing action was initiated at.</param>
            <param name="canceled">Gets or sets whether the operation should be cancelled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.CompleteScrub(System.TimeSpan,System.Boolean@)">
            <summary>
            A scrub action has completed.
            </summary>
            <param name="position">The position that the scrubbing action was completed.</param>
            <param name="canceled">Gets or sets whether the operation should be cancelled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SkipPrevious">
            <summary>
            Skip back to the previous marker in the timeline.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SkipNext">
            <summary>
            Skip forward to the next position in the timeline.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SkipBack">
            <summary>
            Skip back to a previous position in the timeline. (usually 30 seconds)
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.SkipAhead">
            <summary>
            Skip ahead to a future position in the timeline. (usually 30 seconds)
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.Seek(System.TimeSpan)">
            <summary>
            Seek to a specific position.
            </summary>
            <param name="position">The position to seek to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.PlayResume">
            <summary>
            Play or resume media playback. If playback is in rewind or fastforward mode, restore the original playback rate.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.Pause">
            <summary>
            Pause the media.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.Stop">
            <summary>
            Stop the media.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.Replay">
            <summary>
            Replay the media (instant replay).
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.DecreasePlaybackRate">
            <summary>
            Decrease the playback rate.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IInteractiveViewModel.IncreasePlaybackRate">
            <summary>
            Increase the playback rate.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.Interacting">
            <summary>
            Raised when the user interacts
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.VisualMarkers">
            <summary>
            Gets a collection of markers to display
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.MediaQuality">
            <summary>
            Gets whether or not he media is playing at high definition. Usually this means a resolution >= 1280×720 pixels (720p)
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.BufferingProgress">
            <summary>
            Gets a value that indicates the current buffering progress.
            The amount of buffering that is completed for media content. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.DownloadProgress">
            <summary>
            Gets a percentage value indicating the amount of download completed for content located on a remote server.
            The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.StartTime">
            <summary>
            Gets the start time of the current video or audio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.EndTime">
            <summary>
            Gets the end time of the current video or audio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.Duration">
            <summary>
            Gets the duration of the current video or audio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.TimeRemaining">
            <summary>
            Gets the time remaining before the media will finish.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.Position">
            <summary>
            Gets the current position of progress through the media's playback time (or the amount of time since the beginning of the media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.MaxPosition">
            <summary>
            Gets the maximum position that the user can seek or scrub to in the timeline.
            Useful for realtime/live playback.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.CurrentState">
            <summary>
            Gets the status of the MediaElement.
            The state can be one of the following (as defined in the MediaElementState enumeration):
            Buffering, Closed, Opening, Paused, Playing, Stopped.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.Volume">
            <summary>
            Gets the media's volume.
            The media's volume represented on a linear scale between 0 and 1. The default is 0.5.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.SelectedCaption">
            <summary>
            Gets or sets the selected caption.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.AvailableCaptions">
            <summary>
            Gets the caption stream names to be displayed to the user for selecting from multiple captions.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.SelectedAudioStream">
            <summary>
            Gets or sets the selected caption.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.AvailableAudioStreams">
            <summary>
            Gets the caption stream names to be displayed to the user for selecting from multiple captions.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.TimeFormatConverter">
            <summary>
            Gets a an IValueConverter that is used to display the time to the user such as the position, duration, and time remaining.
            The default value applies the string format of "h\\:mm\\:ss".
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.SkipBackInterval">
            <summary>
            Gets the amount of time in the video to skip back when the user selects skip back.
            This can be set to null to cause the skip back action to go back to the beginning.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.SkipAheadInterval">
            <summary>
            Gets the amount of time in the video to skip next when the user selects skip ahead.
            This can be set to null to cause the skip next action to go directly to the end.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSlowMotion">
            <summary>
            Gets whether or not the media is playing in slow motion.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsMuted">
            <summary>
            Gets a value indicating whether the audio is muted.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsFullScreen">
            <summary>
            Gets if the player should indicate it is in fullscreen mode.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsCaptionsActive">
            <summary>
            Gets if the player should show the captions configuration window.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.SignalStrength">
            <summary>
            Gets the signal strength used to indicate visually to the user the quality of the bitrate.
            This is only useful for adaptive streaming and is only displayed when IsSignalStrengthVisible = true
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsCaptionsEnabled">
            <summary>
            Gets the enabled state of the closed captions feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsPlayResumeEnabled">
            <summary>
            Gets the enabled state of the play/resume feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsPauseEnabled">
            <summary>
            Gets the enabled state of the pause feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsStopEnabled">
            <summary>
            Gets the enabled state of the stop feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsReplayEnabled">
            <summary>
            Gets the enabled state of the instant replay feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsAudioSelectionEnabled">
            <summary>
            Gets the enabled state of the audio stream selection feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsRewindEnabled">
            <summary>
            Gets the enabled state of the rewind feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsFastForwardEnabled">
            <summary>
            Gets the enabled state of the fast forward feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSlowMotionEnabled">
            <summary>
            Gets the enabled state of the slow motion feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSeekEnabled">
            <summary>
            Gets the enabled state of the seek feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipPreviousEnabled">
            <summary>
            Gets the enabled state of the skip previous feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipNextEnabled">
            <summary>
            Gets the enabled state of the skip next feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipBackEnabled">
            <summary>
            Gets the enabled state of the skip back feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipAheadEnabled">
            <summary>
            Gets the enabled state of the skip ahead feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsScrubbingEnabled">
            <summary>
            Gets the enabled state of the scrubbing feature.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsGoLiveEnabled">
            <summary>
            Gets the enabled state of the go live feature.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsPlayResumeEnabledChanged">
            <summary>
            Raised when the IsPlayResumeEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsPauseEnabledChanged">
            <summary>
            Raised when the IsPauseEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsStopEnabledChanged">
            <summary>
            Raised when the IsStopEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsReplayEnabledChanged">
            <summary>
            Raised when the IsReplayEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsAudioSelectionEnabledChanged">
            <summary>
            Raised when the IsAudioSelectionEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsCaptionsEnabledChanged">
            <summary>
            Raised when the IsAudioSelectionEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsRewindEnabledChanged">
            <summary>
            Raised when the IsRewindEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsFastForwardEnabledChanged">
            <summary>
            Raised when the IsFastForwardEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSlowMotionEnabledChanged">
            <summary>
            Raised when the IsSlowMotionEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSeekEnabledChanged">
            <summary>
            Raised when the IsSeekEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipPreviousEnabledChanged">
            <summary>
            Raised when the IsSkipPreviousEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipNextEnabledChanged">
            <summary>
            Raised when the IsSkipNextEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipBackEnabledChanged">
            <summary>
            Raised when the IsSkipBackEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipAheadEnabledChanged">
            <summary>
            Raised when the IsSkipAheadEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsScrubbingEnabledChanged">
            <summary>
            Raised when the IsScrubbingEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.IsGoLiveEnabledChanged">
            <summary>
            Raised when the IsGoLiveEnabled property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.CurrentStateChanged">
            <summary>
            Occurs when the value of the CurrentState property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnStopAction">
            <summary>
            Raised when Stop method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnPauseAction">
            <summary>
            Raised when Pause method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnAdjustVolumeAction">
            <summary>
            Raised when SetVolume method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSetSlowMotionAction">
            <summary>
            Raised when SetSlowMotion method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSetMutedAction">
            <summary>
            Raised when SetMuted method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSetFullScreenAction">
            <summary>
            Raised when SetFullScreen method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnInvokeCaptionsAction">
            <summary>
            Raised when SetCaptionsActive method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSkipPreviousAction">
            <summary>
            Raised when SkipPrevious method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSkipNextAction">
            <summary>
            Raised when SkipNext method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSkipBackAction">
            <summary>
            Raised when SkipBack method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSkipAheadAction">
            <summary>
            Raised when SkipAhead method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnSeekAction">
            <summary>
            Raised when Seek method is called and allows an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnGoLiveAction">
            <summary>
            Raised when GoLive method is called and creates an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnPlayResumeAction">
            <summary>
            Raised when PlayResume method is called and creates an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnReplayAction">
            <summary>
            Raised when Replay method is called and creates an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnDecreasePlaybackRateAction">
            <summary>
            Raised when DecreasePlaybackRate method is called and creates an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.IInteractiveViewModel.OnIncreasePlaybackRateAction">
            <summary>
            Raised when IncreasePlaybackRate method is called and creates an opportunity to handle and cancel the action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsAudioSelectionVisible">
            <summary>
            Gets whether or not the interactive AudioStreamSelection feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsCaptionsVisible">
            <summary>
            Gets whether or not the interactive Captions feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsDurationVisible">
            <summary>
            Gets whether or not the interactive Duration feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsTimeRemainingVisible">
            <summary>
            Gets whether or not the interactive TimeRemaining feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsFastForwardVisible">
            <summary>
            Gets whether or not the interactive FastForward feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsFullScreenVisible">
            <summary>
            Gets whether or not the interactive FullScreen feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsGoLiveVisible">
            <summary>
            Gets whether or not the interactive GoLive feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsPlayPauseVisible">
            <summary>
            Gets whether or not the interactive PlayPause feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsPositionVisible">
            <summary>
            Gets whether or not the interactive Position feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsReplayVisible">
            <summary>
            Gets whether or not the interactive Replay feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsRewindVisible">
            <summary>
            Gets whether or not the interactive Rewind feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipPreviousVisible">
            <summary>
            Gets whether or not the interactive SkipPrevious feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipNextVisible">
            <summary>
            Gets whether or not the interactive SkipNext feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipBackVisible">
            <summary>
            Gets whether or not the interactive SkipBack feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSkipAheadVisible">
            <summary>
            Gets whether or not the interactive SkipAhead feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSlowMotionVisible">
            <summary>
            Gets whether or not the interactive SlowMotion feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsStopVisible">
            <summary>
            Gets whether or not the interactive Stop feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsTimelineVisible">
            <summary>
            Gets whether or not the interactive Timeline feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsVolumeVisible">
            <summary>
            Gets whether or not the interactive Volume feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsSignalStrengthVisible">
            <summary>
            Gets whether or not the SignalStrength indicator should be visible.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IInteractiveViewModel.IsResolutionIndicatorVisible">
            <summary>
            Gets whether or not the HD indicator should be visible.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnInteracting(Microsoft.PlayerFramework.InteractionType)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnCurrentStateChanged(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invokes the CurrentStateChanged event.
            </summary>
            <param name="e">The event args to pass</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.Stop">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnStop">
            <summary>
            Notifies the subclass to stop the media
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.Pause">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPause">
            <summary>
            Notifies the subclass to pause the media
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SetVolume(System.Double)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetVolume(System.Double)">
            <summary>
            Notifies the subclass to set the volume
            </summary>
            <param name="volume">The new volume (on a scale of 0-1).</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SetSlowMotion(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetSlowMotion(System.Boolean)">
            <summary>
            Notifies the subclass to toggle slow motion
            </summary>
            <param name="slowMotion">Indicates the new slow motion state (true = slow motion, false = normal playback rate)</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SetMuted(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetMuted(System.Boolean)">
            <summary>
            Notifies the subclass to toggle audio mute
            </summary>
            <param name="muted">Indicates the new muted state (true = muted, false = not muted)</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SetFullScreen(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetFullScreen(System.Boolean)">
            <summary>
            Notifies the subclass to change full screen mode.
            </summary>
            <param name="fullScreen">Indicates the new full screen state (true = fullscreen, false = not fullscreen)</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.InvokeCaptions">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnInvokeCaptions">
            <summary>
            Notifies the subclass to show captions or a caption selector dialog.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.InvokeAudioSelection">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnInvokeAudioSelection">
            <summary>
            Notifies the subclass to show audio selection dialog.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipPrevious">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipPrevious(Microsoft.PlayerFramework.VisualMarker)">
            <summary>
            Notifies the subclass to skip back to the previous chapter/marker
            </summary>
            <param name="marker">The marker to seek to. Null if to the beginning.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipNext">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipNext(Microsoft.PlayerFramework.VisualMarker)">
            <summary>
            Notifies the subclass to skip ahead to the next chapter/marker
            </summary>
            <param name="marker">The marker to seek to. Null if to the end.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipBack">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipBack(System.TimeSpan)">
            <summary>
            Notifies the subclass to seek back in the media.
            </summary>
            <param name="position">The position to seek to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipAhead">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipAhead(System.TimeSpan)">
            <summary>
            Notifies the subclass to seek ahead.
            </summary>
            <param name="position">The position to seek to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.Seek(System.TimeSpan)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSeek(System.TimeSpan)">
            <summary>
            Allows the subclass to learn when a seek occurred.
            </summary>
            <param name="position">The position seeked to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.CompleteScrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnCompleteScrub(System.TimeSpan,System.Boolean@)">
            <summary>
            Allows the subclass to learn when a scrub is complete.
            </summary>
            <param name="position">The position at which scrubbing ended.</param>
            <param name="canceled">Gets or sets whether the operation should be cancelled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.StartScrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnStartScrub(System.TimeSpan,System.Boolean@)">
            <summary>
            Allows the subclass to learn when a scrub is strarting.
            </summary>
            <param name="position">The position at which scrubbing started.</param>
            <param name="canceled">Indicates that the scrub should be canceled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.Scrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnScrub(System.TimeSpan,System.Boolean@)">
            <summary>
            Allows the subclass to learn where the user is scrub to.
            </summary>
            <param name="position">The current position of scrubbing.</param>
            <param name="canceled">Indicates that the scrub should be canceled</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.GoLive">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnGoLive">
            <summary>
            Notifies the subclass that the user is attempting to seek to the live position.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.PlayResume">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPlayResume">
            <summary>
            Notifies the subclass that the user has chosen to reset the playback rate.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.Replay">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnReplay">
            <summary>
            Notifies the subclass that the user has chosen the instant replay feature
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.DecreasePlaybackRate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnDecreasePlaybackRate">
            <summary>
            Notifies the subclass that the user has chosen the rewind feature
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.IncreasePlaybackRate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnIncreasePlaybackRate">
            <summary>
            Notifies the subclass that the user has chosen the fast forward feature
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsGoLiveEnabledChanged">
            <summary>
            Indicates that the go live enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsPlayResumeEnabledChanged">
            <summary>
            Indicates that the play resume enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsPauseEnabledChanged">
            <summary>
            Indicates that the pause enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsStopEnabledChanged">
            <summary>
            Indicates that the stop enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsReplayEnabledChanged">
            <summary>
            Indicates that the replay enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsAudioSelectionEnabledChanged">
            <summary>
            Indicates that the audio stream selection enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsCaptionsEnabledChanged">
            <summary>
            Indicates that the audio stream selection enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsRewindEnabledChanged">
            <summary>
            Indicates that the rewind enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsFastForwardEnabledChanged">
            <summary>
            Indicates that the fast forward enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSlowMotionEnabledChanged">
            <summary>
            Indicates that the slow motion enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSeekEnabledChanged">
            <summary>
            Indicates that the seek enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSkipPreviousEnabledChanged">
            <summary>
            Indicates that the skip Previous enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSkipNextEnabledChanged">
            <summary>
            Indicates that the skip next enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSkipBackEnabledChanged">
            <summary>
            Indicates that the skip back enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsSkipAheadEnabledChanged">
            <summary>
            Indicates that the skip Ahead enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.NotifyIsScrubbingEnabledChanged">
            <summary>
            Indicates that the scrubbing enabled state may have changed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Invokes the property changed event.
            </summary>
            <param name="PropertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Invokes the property changed event.
            </summary>
            <typeparam name="T">The type</typeparam>
            <param name="property">A lambda expression returning the property</param>
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.Interacting">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnStopAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPauseAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnAdjustVolumeAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetSlowMotionAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetMutedAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSetFullScreenAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnInvokeCaptionsAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnInvokeAudioSelectionAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipPreviousAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipNextAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipBackAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSkipAheadAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnSeekAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnGoLiveAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnPlayResumeAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnReplayAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnDecreasePlaybackRateAction">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.OnIncreasePlaybackRateAction">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.AvailableCaptions">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.SelectedCaption">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.AvailableAudioStreams">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.SelectedAudioStream">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.VisualMarkers">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsGoLiveEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsGoLiveEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPlayResumeEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPlayResumeEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPauseEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPauseEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsStopEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsStopEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsReplayEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsReplayEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsAudioSelectionEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsAudioSelectionEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsCaptionsEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsCaptionsEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsRewindEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsRewindEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsFastForwardEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsFastForwardEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSlowMotionEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSlowMotionEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSeekEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSeekEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipPreviousEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipPreviousEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipNextEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipNextEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipBackEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipBackEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipAheadEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipAheadEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.IsScrubbingEnabledChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsScrubbingEnabled">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.CurrentStateChanged">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsMuted">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsFullScreen">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsCaptionsActive">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSlowMotion">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.BufferingProgress">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.DownloadProgress">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.StartTime">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.EndTime">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.Duration">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.TimeRemaining">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.Position">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.MaxPosition">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.CurrentState">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.Volume">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.TimeFormatConverter">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipBackInterval">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.SkipAheadInterval">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.SignalStrength">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.MediaQuality">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsAudioSelectionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsCaptionsVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsDurationVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsTimeRemainingVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsFastForwardVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsFullScreenVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsGoLiveVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPlayPauseVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsPositionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsReplayVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsRewindVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipPreviousVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipNextVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipBackVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSkipAheadVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSlowMotionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsStopVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsTimelineVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsVolumeVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsSignalStrengthVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModelBase.IsResolutionIndicatorVisible">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.InteractiveViewModelBase.PropertyChanged">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.#ctor(Microsoft.PlayerFramework.MediaPlayer)">
            <summary>
            Creates a new instance of InteractiveViewModel
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnStop">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnPause">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSetVolume(System.Double)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSetSlowMotion(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSetMuted(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSetFullScreen(System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnInvokeCaptions">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnInvokeAudioSelection">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSkipPrevious(Microsoft.PlayerFramework.VisualMarker)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSkipNext(Microsoft.PlayerFramework.VisualMarker)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSkipBack(System.TimeSpan)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSkipAhead(System.TimeSpan)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnSeek(System.TimeSpan)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnCompleteScrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnStartScrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnScrub(System.TimeSpan,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnGoLive">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnPlayResume">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnReplay">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnDecreasePlaybackRate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractiveViewModel.OnIncreasePlaybackRate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.AvailableCaptions">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.SelectedCaption">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.AvailableAudioStreams">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.SelectedAudioStream">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.VisualMarkers">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsGoLiveEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsPlayResumeEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsPauseEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsStopEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsReplayEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsAudioSelectionEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsCaptionsEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsRewindEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsFastForwardEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSlowMotionEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSeekEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipPreviousEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipNextEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipBackEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipAheadEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsScrubbingEnabled">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsMuted">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsFullScreen">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsCaptionsActive">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSlowMotion">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.BufferingProgress">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.DownloadProgress">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.StartTime">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.EndTime">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.Duration">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.TimeRemaining">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.Position">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.MaxPosition">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.CurrentState">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.Volume">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.TimeFormatConverter">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.SkipBackInterval">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.SkipAheadInterval">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.SignalStrength">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.MediaQuality">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsAudioSelectionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsCaptionsVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsDurationVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsTimeRemainingVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsFastForwardVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsFullScreenVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsGoLiveVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsPlayPauseVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsPositionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsReplayVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsRewindVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipPreviousVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipNextVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipBackVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSkipAheadVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSlowMotionVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsStopVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsTimelineVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsVolumeVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsSignalStrengthVisible">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractiveViewModel.IsResolutionIndicatorVisible">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.MediaPlayer">
            <summary>
            Represents a media player used to play video or audio and optionally allow the user interact.
            This is the primary class in the Microsoft Media Platform Player Framework.
            This player offers a super-set of the MediaElement API.
            Optional plugins can be automatically detected to help extend or modify the default behavior.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.IMediaSource">
            <summary>
            A source and associated properties required to control initial state and desired playback behavior of the MediaPlayer.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.ProtectionManager">
            <summary>
            Gets or sets the dedicated object for media content protection that is associated with this MediaElement.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.Stereo3DVideoPackingMode">
            <summary>
            Gets or sets an enumeration value that determines the stereo 3-D video frame-packing mode for the current media source.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.Stereo3DVideoRenderMode">
            <summary>
            Gets or sets an enumeration value that determines the stereo 3-D video render mode for the current media source.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.PosterSource">
            <summary>
            The image source for a poster image.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.AutoLoad">
            <summary>
            Gets or sets a gate for loading the source. Setting this to false postpones any subsequent calls to the Source property and SetSource method.
            Once the source is set on the underlying MediaElement, the media begins to download.
            Note: There is another opportunity to block setting the source by using the awaitable BeforeMediaLoaded event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.AutoPlay">
            <summary>
            Gets or sets a value that indicates whether media will begin playback automatically when the Source property is set.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.StartupPosition">
            <summary>
            Gets or sets the position at which to start the video at. This is useful for resuming videos at the place they were left off at.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.Source">
            <summary>
            Gets or sets a media source on the MediaElement.
            A string that specifies the source of the element, as a Uniform Resource Identifier (URI).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.AvailableAudioStreams">
            <summary>
            Gets this audio stream names to be displayed to the user for selecting from multiple audio tracks.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.VisualMarkers">
            <summary>
            Gets a collection of timeline markers to display in the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.AvailableCaptions">
            <summary>
            Gets a collection of available captions.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.IMediaSource.Player">
            <summary>
            Gets the media player associated with this MediaSource
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.#ctor">
            <summary>
            Instantiates a new instance of the MediaPlayer class.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.cts">
            <summary>
            Provides a cancellation token for all async operations that should be cancelled during Dispose
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.UpdateTimer">
            <summary>
            The timer used to update the position and other frequently changing properties.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.mediaRestorePosition">
            <summary>
            Used to seek on MediaOpened to a new position.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.rateAfterScrub">
            <summary>
            Indicates the playback rate that should be set after scrubbing.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.startScrubPosition">
            <summary>
            Remembers the scrub start position to be relayed in future scrub events.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.AddAudioEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)">
            <summary>
            Applies an audio effect to playback. Takes effect for the next source set on the MediaElement.
            </summary>
            <param name="effectID">The identifier for the desired effect.</param>
            <param name="effectOptional">True if the effect should not block playback in cases where the effect cannot be used at run time. False if playback should be blocked in cases where the effect cannot be used at run time.</param>
            <param name="effectConfiguration">A property set that transmits property values to specific effects as selected by effectID.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.AddVideoEffect(System.String,System.Boolean,Windows.Foundation.Collections.IPropertySet)">
            <summary>
            Applies a video effect to playback. Takes effect for the next source set on the MediaElement.
            </summary>
            <param name="effectID">The identifier for the desired effect.</param>
            <param name="effectOptional">True if the effect should not block playback in cases where the effect cannot be used at run time. False if playback should be blocked in cases where the effect cannot be used at run time.</param>
            <param name="effectConfiguration">A property set that transmits property values to specific effects as selected by effectID.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.RemoveAllEffects">
            <summary>
            Removes all effects for the next source set for this MediaElement.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.CanPlayType(System.String)">
            <summary>
            Returns an enumeration value that describes the likelihood that the current MediaElement and its client configuration can play that media source.
            </summary>
            <param name="type">A string that describes the desired type as a MIME string.</param>
            <returns>A value of the enumeration that describes the likelihood that the source can be played by the current media engine.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.GetAudioStreamLanguage(System.Nullable{System.Int32})">
            <summary>
            Gets the language for a given audio stream.
            </summary>
            <param name="index">The index of the audio stream.</param>
            <returns>The language for the audio stream.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.SetSource(Windows.Storage.Streams.IRandomAccessStream,System.String)">
            <summary>
            Sets the Source property using the supplied stream.
            </summary>
            <param name="stream">The stream that contains the media to load.</param>
            <param name="mimeType">The MIME type of the media resource, expressed as the string form typically seen in HTTP headers and requests.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.DecreasePlaybackRate">
            <summary>
            Decreases the PlaybackRate. When called, PlaybackRate will halve until it reaches 1. Once it reaches 1, it will flip to negative numbers causing the player to rewind.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.IncreasePlaybackRate">
            <summary>
            Increases the PlaybackRate. When called, PlaybackRate will double until it reaches -1. Once it reaches -1, it will flip to positive numbers causing the player to fast forward.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Replay">
            <summary>
            Supports Instant Replay by subtracting the amount of time specified by the ReplayOffset property from the current Position.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Close">
            <summary>
            Stops and closes the current media source. Fires MediaClosed.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Retry">
            <summary>
            Retries the media after an error by reopening the media and seeking to the last position
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.PlayResume">
            <summary>
            Plays the media or resets the PlaybackRate if already playing.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Stop">
            <summary>
            Stops and resets media to be played from the beginning.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Pause">
            <summary>
            Pauses media at the current position.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Play">
            <summary>
            Plays media from the current position.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.InvokeCaptions">
            <summary>
            Invokes the captions selection dialog.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.InvokeAudioSelection">
            <summary>
            Invokes the audio stream selection dialog.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.SeekToLive">
            <summary>
            Seeks to the live position during live playback.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsEnabledProperty">
            <summary>
            Identifies the IsCaptionsEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsCaptionsAllowedChanged">
            <summary>
            Indicates that the go live enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveEnabledProperty">
            <summary>
            Identifies the IsGoLiveEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsGoLiveAllowedChanged">
            <summary>
            Indicates that the go live enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsPlayResumeEnabledProperty">
            <summary>
            Identifies the IsPlayResumeEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsPlayResumeAllowedChanged">
            <summary>
            Indicates that the play resume enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsPauseEnabledProperty">
            <summary>
            Identifies the IsPauseEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsPauseAllowedChanged">
            <summary>
            Indicates that the pause enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsStopEnabledProperty">
            <summary>
            Identifies the IsStopEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsStopAllowedChanged">
            <summary>
            Indicates that the stop enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsReplayEnabledProperty">
            <summary>
            Identifies the IsReplayEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsReplayAllowedChanged">
            <summary>
            Indicates that the replay enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionEnabledProperty">
            <summary>
            Identifies the IsAudioSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsAudioSelectionAllowedChanged">
            <summary>
            Indicates that the audio stream selection enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsRewindEnabledProperty">
            <summary>
            Identifies the IsRewindEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsRewindAllowedChanged">
            <summary>
            Indicates that the rewind enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardEnabledProperty">
            <summary>
            Identifies the IsFastForwardEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsFastForwardAllowedChanged">
            <summary>
            Indicates that the fast forward enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionEnabledProperty">
            <summary>
            Identifies the IsSlowMotionEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSlowMotionAllowedChanged">
            <summary>
            Indicates that the slow motion enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSeekEnabledProperty">
            <summary>
            Identifies the IsSeekEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSeekAllowedChanged">
            <summary>
            Indicates that the seek enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousEnabledProperty">
            <summary>
            Identifies the IsSkipPreviousEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSkipPreviousAllowedChanged">
            <summary>
            Indicates that the skip previous enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextEnabledProperty">
            <summary>
            Identifies the IsSkipNextEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSkipNextAllowedChanged">
            <summary>
            Indicates that the skip next enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackEnabledProperty">
            <summary>
            Identifies the IsSkipBackEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSkipBackAllowedChanged">
            <summary>
            Indicates that the skip back enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadEnabledProperty">
            <summary>
            Identifies the IsSkipAheadEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsSkipAheadAllowedChanged">
            <summary>
            Indicates that the skip ahead enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingEnabledProperty">
            <summary>
            Identifies the IsScrubbingEnabled dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.NotifyIsScrubbingAllowedChanged">
            <summary>
            Indicates that the scrubbing enabled state may have changed.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionVisibleProperty">
            <summary>
            Identifies the IsAudioSelectionVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsVisibleProperty">
            <summary>
            Identifies the IsCaptionsVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsDurationVisibleProperty">
            <summary>
            Identifies the IsDurationVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsTimeRemainingVisibleProperty">
            <summary>
            Identifies the IsTimeRemainingVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardVisibleProperty">
            <summary>
            Identifies the IsFastForwardVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsFullScreenVisibleProperty">
            <summary>
            Identifies the IsFullScreenVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveVisibleProperty">
            <summary>
            Identifies the IsGoLiveVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsPlayPauseVisibleProperty">
            <summary>
            Identifies the IsPlayPauseVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsPositionVisibleProperty">
            <summary>
            Identifies the IsPositionVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsReplayVisibleProperty">
            <summary>
            Identifies the IsReplayVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsRewindVisibleProperty">
            <summary>
            Identifies the IsRewindVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousVisibleProperty">
            <summary>
            Identifies the IsSkipPreviousVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextVisibleProperty">
            <summary>
            Identifies the IsSkipNextVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackVisibleProperty">
            <summary>
            Identifies the IsSkipBackVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadVisibleProperty">
            <summary>
            Identifies the IsSkipAheadVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionVisibleProperty">
            <summary>
            Identifies the IsSlowMotionVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsStopVisibleProperty">
            <summary>
            Identifies the IsStopVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsTimelineVisibleProperty">
            <summary>
            Identifies the IsTimelineVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsVolumeVisibleProperty">
            <summary>
            Identifies the IsVolumeVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSignalStrengthVisibleProperty">
            <summary>
            Identifies the IsSignalStrengthVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsResolutionIndicatorVisibleProperty">
            <summary>
            Identifies the IsResolutionIndicatorVisible dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.TimeFormatConverterProperty">
            <summary>
            Identifies the TimeFormatConverter dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SkipBackIntervalProperty">
            <summary>
            Identifies the SkipBackInterval dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SkipAheadIntervalProperty">
            <summary>
            Identifies the SkipAheadInterval dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.VisualMarkersProperty">
            <summary>
            Identifies the TimelineMarkers dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AutoLoadProperty">
            <summary>
            Identifies the AutoLoad dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SignalStrengthProperty">
            <summary>
            Identifies the SignalStrength dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.MediaQualityProperty">
            <summary>
            Identifies the MediaQuality dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.LivePositionBufferProperty">
            <summary>
            Identifies the LivePositionBuffer dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsPositionLiveProperty">
            <summary>
            Identifies the IsPositionLive dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.LivePositionProperty">
            <summary>
            Identifies the LivePosition dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.DurationProperty">
            <summary>
            Identifies the Duration dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsStartTimeOffsetProperty">
            <summary>
            Identifies the IsStartTimeOffset dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.StartTimeProperty">
            <summary>
            Identifies the StartTime dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.EndTimeProperty">
            <summary>
            Identifies the EndTime dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.TimeRemainingProperty">
            <summary>
            Identifies the TimeRemaining dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SeekWhileScrubbingProperty">
            <summary>
            Identifies the SeekWhileScrubbing dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.ReplayOffsetProperty">
            <summary>
            Identifies the ReplayOffset dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SlowMotionPlaybackRateProperty">
            <summary>
            Identifies the SlowMotionPlaybackRate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionProperty">
            <summary>
            Identifies the IsSlowMotion dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsActiveProperty">
            <summary>
            Identifies the IsCaptionsActive dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsFullScreenProperty">
            <summary>
            Identifies the IsFullScreen dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AdvertisingStateProperty">
            <summary>
            Identifies the AdvertisingState dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingProperty">
            <summary>
            Identifies the IsScrubbing dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.StartupPositionProperty">
            <summary>
            Identifies the StartupPosition dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.MediaEndedBehaviorProperty">
            <summary>
            Identifies the MediaEndedBehavior dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.UpdateIntervalProperty">
            <summary>
            Identifies the UpdateInterval dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AvailableCaptionsProperty">
            <summary>
            Identifies the AvailableCaptions dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SelectedCaptionProperty">
            <summary>
            Identifies the SelectedCaption dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AvailableAudioStreamsProperty">
            <summary>
            Identifies the AvailableAudioStreams dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SelectedAudioStreamProperty">
            <summary>
            Identifies the SelectedAudioStream dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsLiveProperty">
            <summary>
            Identifies the IsLive dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AspectRatioWidthProperty">
            <summary>
            Identifies the AspectRatioWidth dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AspectRatioHeightProperty">
            <summary>
            Identifies the AspectRatioHeight dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AudioCategoryProperty">
            <summary>
            Identifies the AudioCategory dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AudioDeviceTypeProperty">
            <summary>
            Identifies the AudioDeviceType dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.PlayToSourceProperty">
            <summary>
            Identifies the PlayToSource dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.DefaultPlaybackRateProperty">
            <summary>
            Identifies the DefaultPlaybackRate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsAudioOnlyProperty">
            <summary>
            Identifies the IsAudioOnly dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsLoopingProperty">
            <summary>
            Identifies the IsLooping dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.PosterSourceProperty">
            <summary>
            Identifies the PosterSource dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.ActualStereo3DVideoPackingModeProperty">
            <summary>
            Identifies the ActualStereo3DVideoPackingMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.Stereo3DVideoPackingModeProperty">
            <summary>
            Identifies the Stereo3DVideoPackingMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.Stereo3DVideoRenderModeProperty">
            <summary>
            Identifies the Stereo3DVideoRenderMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsStereo3DVideoProperty">
            <summary>
            Identifies the IsStereo3DVideo dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.RealTimePlaybackProperty">
            <summary>
            Identifies the RealTimePlayback dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.ProtectionManagerProperty">
            <summary>
            Identifies the ProtectionManager dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AudioStreamCountProperty">
            <summary>
            Identifies the AudioStreamCount dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AudioStreamIndexProperty">
            <summary>
            Identifies the AudioStreamIndex dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AutoPlayProperty">
            <summary>
            Identifies the AutoPlay dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.BufferingProgressProperty">
            <summary>
            Identifies the BufferingProgress dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.CanPauseProperty">
            <summary>
            Identifies the CanPause dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.CanSeekProperty">
            <summary>
            Identifies the CanSeek dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.BalanceProperty">
            <summary>
            Identifies the Balance dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.DownloadProgressProperty">
            <summary>
            Identifies the DownloadProgress dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.DownloadProgressOffsetProperty">
            <summary>
            Identifies the DownloadProgressOffset dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsMutedProperty">
            <summary>
            Identifies the IsMuted dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.NaturalDurationProperty">
            <summary>
            Identifies the NaturalDuration dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.NaturalVideoHeightProperty">
            <summary>
            Identifies the NaturalVideoHeight dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.NaturalVideoWidthProperty">
            <summary>
            Identifies the NaturalVideoWidth dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.PlaybackRateProperty">
            <summary>
            Identifies the PlaybackRate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.CurrentStateProperty">
            <summary>
            Identifies the CurrentState dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.VolumeProperty">
            <summary>
            Identifies the Volume dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.SeekAsync(System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>
            Performs an async Seek. This can also be accomplished by setting the Position property and waiting for SeekCompleted to fire.
            </summary>
            <param name="position">The new position to seek to</param>
            <param name="timeout">The timeout to await before returning</param>
            <returns>The task to await on.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnUpdate">
            <summary>
            Occurs when the timer updates
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnMediaOpened">
            <summary>
            Initializes the MediaPlayer once the media has opened but immediately before the MediaOpened event fires.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.PopulateAvailableAudioStreams">
            <summary>
            Populates the available audio streams from the MediaElement.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnMediaClosed">
            <summary>
            Cleans up the MediaPlayer when the media has closed but immediately before the MediaClosed event fires.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.SetValueWithoutCallback(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Sets the local value of a dependency property on a DependencyObject without invoking the callback.
            </summary>
            <param name="dp">The identifier of the dependency property to set.</param>
            <param name="value">The new local value.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Dispose">
            <summary>
            Disposes of the active session and frees up all memory associated with this instance.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.Dispose(System.Boolean)">
            <summary>
            Disposes of the active session and frees up all memory associated with this instance.
            </summary>
            <param name="disposing">Is called from the Dispose method.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnAfterApplyTemplate">
            <summary>
            Run all the queued actions that should happen after the template is applied
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.RegisterApplyTemplateAction(System.Action)">
            <summary>
            Defers the action until after the template is applied. This is useful to help avoid NullRefExceptions from template children not existing yet.
            </summary>
            <param name="action">The action to run after the template is applied.</param>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AutoHideIntervalProperty">
            <summary>
            Identifies the AutoHideInterval dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.InteractiveViewModelProperty">
            <summary>
            Identifies the InteractiveViewModel dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.InteractiveActivationModeProperty">
            <summary>
            Identifies the InteractiveActivationMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.InteractiveDeactivationModeProperty">
            <summary>
            Identifies the InteractiveDeactivationMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AutoHideProperty">
            <summary>
            Identifies the AutoHide dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.AutoHideBehaviorProperty">
            <summary>
            Identifies the AutoHideBehavior dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.IsInteractiveProperty">
            <summary>
            Identifies the IsInteractive dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.MediaPlayer.PlayerStateProperty">
            <summary>
            Identifies the PlayerState dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.MediaElement_PositionChanged(System.TimeSpan)">
            <summary>
            This is a fake event that comes from an internal binding
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.OnUserInteraction(Microsoft.PlayerFramework.InteractionType,System.Boolean)">
            <summary>
            Indicates the user has interacted with the app and causes the player to reset the auto hide timer (if enabled).
            </summary>
            <param name="interactionType">The type of interaction the user peformed.</param>
            <param name="isFunctional">Indicates that the interaction performed a function or action of some kind.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.AddInteractiveElement(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Adds a UI element whoes mouse/pointer events should participate in causing the interactive elements of the control to appear.
            </summary>
            <param name="uiElement">The UIElement to participate in the interactivity state of the control</param>
            <param name="hoverParticipation">Prevent autohide if pointer is hovering over UIElement. Requires AutoHideBehavior to be set to PreventDuringInteractiveHover to have any affect.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MediaPlayer.RemoveInteractiveElement(Windows.UI.Xaml.UIElement)">
            <summary>
            Removes a UI element after it was added via AddIntertiveElement.
            </summary>
            <param name="uiElement">The UIElement to no longer participate in the interactivity state of the control</param>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsMediaLoaded">
            <summary>
            Indicates whether or not the media is actually set on the underlying MediaElement.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.CurrentStateChangedBufferingIgnored">
            <summary>
            Indicates the state has changed but filters out changes when the state changes to buffering. 
            Buffering is a special case that makes it hard to determine if the video is actually playing, loading or paused.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.PendingLoadAction">
            <summary>
            Holds the action to set the source so we can delay things
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoLoadPlugins">
            <summary>
            Gets or sets whether plugins should be automatically discovered. MEF (Managed Extensibility Framework) is used to discover plugins.
            Set to false to optimize if you are not using any plugins or if you want to manually set which plugins are connected.
            You can programmatically connect plugins by adding to the Plugins collection. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Plugins">
            <summary>
            Gets the collection of connected plugins. You can dynamically add a plugin to the collection at any time and it will be appropriately wired when added and unwired when removed.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SeekCompleted">
            <summary>
            Occurs when the seek point of a requested seek operation is ready for playback.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.Initialized">
            <summary>
            Occurs when the template is loaded for the first time and all plugins have been loaded.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SelectedCaptionChanged">
            <summary>
            Occurs when the SelectedCaption property changed.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SelectedAudioStreamChanged">
            <summary>
            Occurs when the SelectedAudioStream property changed.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.PlayerStateChanged">
            <summary>
            Occurs when the PlayerState property changed. This is different from the MediaState.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaLoading">
            <summary>
            Occurs just before the source is set and offers the ability to perform blocking async operations.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaEnding">
            <summary>
            Occurs just before the MediaEnded event fires and offers the ability to perform blocking async operations.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.UpdateCompleted">
            <summary>
            Occurs when the timer fires and gives an opportunity to update info without creating a separate timer.
            This only fires while media is open and continues to fire even after it's ended or while paused.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.BufferingProgressChanged">
            <summary>
            Occurs when the BufferingProgress property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.CurrentStateChanged">
            <summary>
            Occurs when the value of the CurrentState property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.DownloadProgressChanged">
            <summary>
            Occurs when the DownloadProgress property has changed.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MarkerReached">
            <summary>
            Occurs when a timeline marker is encountered during media playback.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaEnded">
            <summary>
            Occurs when the MediaElement is no longer playing audio or video.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaFailed">
            <summary>
            Occurs when there is an error associated with the media Source.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaStarting">
            <summary>
            Occurs when the playback of new media is about to start.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaStarted">
            <summary>
            Occurs when the playback of new media has actually started.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaOpened">
            <summary>
            Occurs when the MediaElement has opened the media source audio or video.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.RateChanged">
            <summary>
            Occurs when the PlaybackRate property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaClosed">
            <summary>
            Occurs when the MediaElement source has been closed (set to null).
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.PositionChanged">
            <summary>
            Occurs when the Position property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.VolumeChanged">
            <summary>
            Occurs when the Volume property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsMutedChanged">
            <summary>
            Occurs when the IsMuted property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsLiveChanged">
            <summary>
            Occurs when the IsLive property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.AudioStreamIndexChanged">
            <summary>
            Occurs when the AudioStreamIndex property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsFullScreenChanged">
            <summary>
            Occurs when the IsFullScreen property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.AdvertisingStateChanged">
            <summary>
            Occurs when the AdvertisingState property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsActiveChanged">
            <summary>
            Occurs when the IsCaptionsActive property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.Seeked">
            <summary>
            Occurs while the user seeks. This is mutually exclusive from scrubbing.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.Scrubbing">
            <summary>
            Occurs while the user is scrubbing. Raised for each new position.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.ScrubbingCompleted">
            <summary>
            Occurs when the user has completed scrubbing.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.ScrubbingStarted">
            <summary>
            Occurs when the user starts scrubbing.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SignalStrengthChanged">
            <summary>
            Occurs when the SignalStrength property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.MediaQualityChanged">
            <summary>
            Occurs when the HighDefinition property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionChanged">
            <summary>
            Occurs when the IsSlowMotion property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.DurationChanged">
            <summary>
            Occurs when the Duration property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.StartTimeChanged">
            <summary>
            Occurs when the StartTime property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.EndTimeChanged">
            <summary>
            Occurs when the EndTime property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.TimeRemainingChanged">
            <summary>
            Occurs when the TimeRemaining property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.LivePositionChanged">
            <summary>
            Occurs when the MaxPosition property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.TimeFormatConverterChanged">
            <summary>
            Occurs when the TimeFormatConverter property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SkipBackIntervalChanged">
            <summary>
            Occurs when the SkipBackInterval property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.SkipAheadIntervalChanged">
            <summary>
            Occurs when the SkipAheadInterval property changes.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.GoLive">
            <summary>
            Occurs when the SeekToLive method is called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.CaptionsInvoked">
            <summary>
            Occurs when the InvokeCaptions method is called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.AudioSelectionInvoked">
            <summary>
            Occurs when the InvokeAudioSelection method is called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsEnabledChanged">
            <summary>
            Occurs when the IsCaptionsEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsEnabled">
            <summary>
            Gets based on the current state whether GoLive can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsAllowedChanged">
            <summary>
            Occurs when the IsCaptionsAllowed property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsAllowed">
            <summary>
            Gets whether go live is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveEnabledChanged">
            <summary>
            Occurs when the IsGoLiveEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveEnabled">
            <summary>
            Gets based on the current state whether GoLive can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveAllowedChanged">
            <summary>
            Occurs when the IsGoLiveAllowed property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveAllowed">
            <summary>
            Gets whether go live is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPlayResumeEnabledChanged">
            <summary>
            Occurs when the IsPlayResumeEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPlayResumeEnabled">
            <summary>
            Gets based on the current state whether PlayResume can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPlayResumeAllowedChanged">
            <summary>
            Occurs when the IsPlayResumeAllowed property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPlayResumeAllowed">
            <summary>
            Indicates that play is preferred over pause. Useful for binding to the toggle state of a Play/Pause button.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPauseEnabledChanged">
            <summary>
            Occurs when the IsPauseEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPauseEnabled">
            <summary>
            Gets based on the current state whether Pause can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPauseAllowedChanged">
            <summary>
            Occurs when the IsPauseEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPauseAllowed">
            <summary>
            Gets whether pause is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsStopEnabledChanged">
            <summary>
            Occurs when the IsStopEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsStopEnabled">
            <summary>
            Gets based on the current state whether Stop can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsStopAllowedChanged">
            <summary>
            Occurs when the IsStopEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsStopAllowed">
            <summary>
            Gets whether stop is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsReplayEnabledChanged">
            <summary>
            Occurs when the IsReplayEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsReplayEnabled">
            <summary>
            Gets based on the current state whether Replay can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsReplayAllowedChanged">
            <summary>
            Occurs when the IsReplayEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsReplayAllowed">
            <summary>
            Gets whether replay is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionEnabledChanged">
            <summary>
            Occurs when the IsAudioSelectionEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionEnabled">
            <summary>
            Gets based on the current state whether AudioStreamSelection can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionAllowedChanged">
            <summary>
            Occurs when the IsAudioSelectionEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionAllowed">
            <summary>
            Gets whether audio stream selection is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsRewindEnabledChanged">
            <summary>
            Occurs when the IsRewindEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsRewindEnabled">
            <summary>
            Gets based on the current state whether Rewind can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsRewindAllowedChanged">
            <summary>
            Occurs when the IsRewindEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsRewindAllowed">
            <summary>
            Gets whether rewind is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardEnabledChanged">
            <summary>
            Occurs when the IsFastForwardEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardEnabled">
            <summary>
            Gets based on the current state whether FastForward can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardAllowedChanged">
            <summary>
            Occurs when the IsFastForwardEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardAllowed">
            <summary>
            Gets whether fast forward is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionEnabledChanged">
            <summary>
            Occurs when the IsSlowMotionEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionEnabled">
            <summary>
            Gets based on the current state whether SlowMotion can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionAllowedChanged">
            <summary>
            Occurs when the IsSlowMotionEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionAllowed">
            <summary>
            Gets whether slow motion is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSeekEnabledChanged">
            <summary>
            Occurs when the IsSeekEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSeekEnabled">
            <summary>
            Gets based on the current state whether Seek can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSeekAllowedChanged">
            <summary>
            Occurs when the IsSeekEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSeekAllowed">
            <summary>
            Gets whether seek is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousEnabledChanged">
            <summary>
            Occurs when the IsSkipPreviousEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousEnabled">
            <summary>
            Gets based on the current state whether the SkipPrevious method can be called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousAllowedChanged">
            <summary>
            Occurs when the IsSkipPreviousEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousAllowed">
            <summary>
            Gets whether skipping previous is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextEnabledChanged">
            <summary>
            Occurs when the IsSkipNextEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextEnabled">
            <summary>
            Gets based on the current state whether the SkipNext method can be called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextAllowedChanged">
            <summary>
            Occurs when the IsSkipNextEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextAllowed">
            <summary>
            Gets whether skipping next is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackEnabledChanged">
            <summary>
            Occurs when the IsSkipBackEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackEnabled">
            <summary>
            Gets based on the current state whether the SkipBack method can be called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackAllowedChanged">
            <summary>
            Occurs when the IsSkipBackEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackAllowed">
            <summary>
            Gets whether skipping back is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadEnabledChanged">
            <summary>
            Occurs when the IsSkipAheadEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadEnabled">
            <summary>
            Gets based on the current state whether the SkipAhead method can be called.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadAllowedChanged">
            <summary>
            Occurs when the IsSkipAheadEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadAllowed">
            <summary>
            Gets whether skipping ahead is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingEnabledChanged">
            <summary>
            Occurs when the IsScrubbingEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingEnabled">
            <summary>
            Gets based on the current state whether scrubbing can occur.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingAllowedChanged">
            <summary>
            Occurs when the IsScrubbingEnabled property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsScrubbingAllowed">
            <summary>
            Gets whether scrubbing is allowed based on the state of the player.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionVisibleChanged">
            <summary>
            Occurs when the IsAudioSelectionVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsAudioSelectionVisible">
            <summary>
            Gets or sets if the interactive AudioStreamSelection feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsVisibleChanged">
            <summary>
            Occurs when the IsCaptionsVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsVisible">
            <summary>
            Gets or sets if the interactive Captions feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsDurationVisibleChanged">
            <summary>
            Occurs when the IsDurationVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsDurationVisible">
            <summary>
            Gets or sets if the interactive Duration feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsTimeRemainingVisibleChanged">
            <summary>
            Occurs when the IsTimeRemainingVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsTimeRemainingVisible">
            <summary>
            Gets or sets if the interactive TimeRemaining feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardVisibleChanged">
            <summary>
            Occurs when the IsFastForwardVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsFastForwardVisible">
            <summary>
            Gets or sets if the interactive FastForward feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsFullScreenVisibleChanged">
            <summary>
            Occurs when the IsFullScreenVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsFullScreenVisible">
            <summary>
            Gets or sets if the interactive FullScreen feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveVisibleChanged">
            <summary>
            Occurs when the IsGoLiveVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsGoLiveVisible">
            <summary>
            Gets or sets if the interactive GoLive feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPlayPauseVisibleChanged">
            <summary>
            Occurs when the IsPlayPauseVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPlayPauseVisible">
            <summary>
            Gets or sets if the interactive PlayPause feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsPositionVisibleChanged">
            <summary>
            Occurs when the IsPositionVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPositionVisible">
            <summary>
            Gets or sets if the interactive Position feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsReplayVisibleChanged">
            <summary>
            Occurs when the IsReplayVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsReplayVisible">
            <summary>
            Gets or sets if the interactive Replay feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsRewindVisibleChanged">
            <summary>
            Occurs when the IsRewindVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsRewindVisible">
            <summary>
            Gets or sets if the interactive Rewind feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousVisibleChanged">
            <summary>
            Occurs when the IsSkipPreviousVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipPreviousVisible">
            <summary>
            Gets or sets if the interactive SkipPrevious feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextVisibleChanged">
            <summary>
            Occurs when the IsSkipNextVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipNextVisible">
            <summary>
            Gets or sets if the interactive SkipNext feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackVisibleChanged">
            <summary>
            Occurs when the IsSkipBackVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipBackVisible">
            <summary>
            Gets or sets if the interactive SkipBack feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadVisibleChanged">
            <summary>
            Occurs when the IsSkipAheadVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSkipAheadVisible">
            <summary>
            Gets or sets if the interactive SkipAhead feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionVisibleChanged">
            <summary>
            Occurs when the IsSlowMotionVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotionVisible">
            <summary>
            Gets or sets if the interactive SlowMotion feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsStopVisibleChanged">
            <summary>
            Occurs when the IsStopVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsStopVisible">
            <summary>
            Gets or sets if the interactive Stop feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsTimelineVisibleChanged">
            <summary>
            Occurs when the IsTimelineVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsTimelineVisible">
            <summary>
            Gets or sets if the interactive Timeline feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsVolumeVisibleChanged">
            <summary>
            Occurs when the IsVolumeVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsVolumeVisible">
            <summary>
            Gets or sets if the interactive Volume feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsSignalStrengthVisibleChanged">
            <summary>
            Occurs when the IsSignalStrengthVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSignalStrengthVisible">
            <summary>
            Gets or sets if the interactive SignalStrength feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsResolutionIndicatorVisibleChanged">
            <summary>
            Occurs when the IsResolutionIndicatorVisible property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsResolutionIndicatorVisible">
            <summary>
            Gets or sets if the interactive SignalStrength feature should be visible and therefore available for the user to control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Microsoft#PlayerFramework#IMediaSource#Player">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.TimeFormatConverter">
            <summary>
            Gets or sets a an IValueConverter that is used to display the time to the user such as the position, duration, and time remaining.
            The default value applies the string format of "h\\:mm\\:ss".
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultTimeFormat">
            <summary>
            The default TimeFormat string to use to display position, time remaining and duration.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SkipBackInterval">
            <summary>
            Gets or sets the amount of time in the video to skip back when the user selects skip back.
            This can be set to null to cause the skip back action to go back to the beginning.
            The default is 30 seconds although it will never go back past the beginning.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultSkipBackInterval">
            <summary>
            The default SkipBackInterval value.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SkipAheadInterval">
            <summary>
            Gets or sets the amount of time in the video to skip ahead when the user selects skip ahead.
            This can be set to null to cause the skip ahead action to go directly to the end.
            The default is 30 seconds although it will never go past the end (or MaxPosition if set).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultSkipAheadInterval">
            <summary>
            The default SkipAheadInterval value.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.VisualMarkers">
            <summary>
            Gets or sets the collection of markers to be displayed in the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Markers">
            <summary>
            Gets the collection of timeline markers associated with the currently loaded media file.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoLoad">
            <summary>
            Gets or sets a gate for loading the source. Setting this to false postpones any subsequent calls to the Source property and SetSource method.
            Once the source is set on the underlying MediaElement, the media begins to download.
            Note: There is another opportunity to block setting the source by using the awaitable BeforeMediaLoaded event.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SignalStrength">
            <summary>
            Gets or sets the signal strength used to indicate visually to the user the quality of the bitrate.
            This is only useful for adaptive streaming and is only displayed when IsSignalStrengthVisible = true
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.MediaQuality">
            <summary>
            Gets or sets a an bool that is used to display the time to the user such as the position, duration, and time remaining.
            The default value applies the string format of "h\\:mm\\:ss".
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.LivePositionBuffer">
            <summary>
            Gets or sets a value indicating what the tollerance is for determining whether or not the current position is live. IsPositionLive is affected by this property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsPositionLive">
            <summary>
            Gets or sets a value indicating what the tollerance is for determining whether or not the current position is live. IsPositionLive is affected by this property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.LivePosition">
            <summary>
            Gets or sets the Live position for realtime/live playback.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Duration">
            <summary>
            Gets or sets the duration of the current video or audio. For VOD, this is automatically set from the NaturalDuration property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsStartTimeOffset">
            <summary>
            Gets or sets the IsStartTimeOffset of the current video or audio. For VOD, this is automatically set from the NaturalIsStartTimeOffset property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.StartTime">
            <summary>
            Gets or sets the StartTime of the current video or audio. For VOD, this is automatically set from the NaturalStartTime property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.EndTime">
            <summary>
            Gets or sets the EndTime of the current media. For progressive video, this is automatically set from Duration - StartTime.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.TimeRemaining">
            <summary>
            Gets the time remaining before the media will finish. This is calculated automatically whenever the Position or Duration properties change.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SeekWhileScrubbing">
            <summary>
            Gets or sets whether or not the position should change while the user is actively scrubbing. If false, media will be paused until the user has finished scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.ReplayOffset">
            <summary>
            Gets or sets the amount of time to reset the current play position back for an instant replay. Default 5 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SlowMotionPlaybackRate">
            <summary>
            Gets or sets the playback rate when operating in slow motion (IsSlowMotion). Default .25
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsSlowMotion">
            <summary>
            Gets or sets whether or not the media is playing in slow motion.
            The slow motion playback rate is defined by the SlowMotionPlaybackRate property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsCaptionsActive">
            <summary>
            Gets or sets if the player should show the captions configuration window.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsFullScreen">
            <summary>
            Gets or sets if the player should indicate it is in fullscreen mode.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AdvertisingState">
            <summary>
            Gets or sets if the player should indicate it is in Advertising mode.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsScrubbing">
            <summary>
            Gets whether or not the user is actively scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.StartupPosition">
            <summary>
            Gets or sets the position at which to start the video at. This is useful for resuming videos at the place they were left off at.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.MediaEndedBehavior">
            <summary>
            Gets or sets the desired behavior when the media reaches the end.
            Note: This will be ignored if IsLooping = true.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.UpdateInterval">
            <summary>
            Gets or sets the interval that the timeline and other properties affected by the position will change.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AvailableCaptions">
            <summary>
            Gets or sets the list of captions that can be chosen by the user.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SelectedCaption">
            <summary>
            Gets or sets the selected caption stream.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AvailableAudioStreams">
            <summary>
            Gets or sets the list of AudioStreams that can be chosen by the user.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.SelectedAudioStream">
            <summary>
            Gets or sets the selected AudioStream stream.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsLive">
            <summary>
            Gets or sets a value indicating whether the media is Live (vs. VOD).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.MediaExtensionManager">
            <summary>
            Gets or sets the MediaExtensionManager to be used by PlayerFramework plugins.
            One will be created on first use if it is not set.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AspectRatioWidth">
            <summary>
            Gets the width portion of the media's native aspect ratio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AspectRatioHeight">
            <summary>
            Gets the height portion of the media's native aspect ratio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AudioCategory">
            <summary>
            Gets or sets a value that describes the purpose of the audio information in an audio stream.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AudioDeviceType">
            <summary>
            Gets or sets a value that describes the primary usage of the device that is being used to play back audio.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.PlayToSource">
            <summary>
            Gets the information that is transmitted if the MediaElement is used for a "PlayTo" scenario.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultPlaybackRate">
            <summary>
            Gets or sets the default playback rate for the media engine. The playback rate applies when the user is not using fast foward or reverse.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsAudioOnly">
            <summary>
            Gets or sets a value that describes whether the media source loaded in the media engine should seek to the start after reaching its end.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsLooping">
            <summary>
            Gets or sets a value that describes whether the media source loaded in the media engine should seek to the start after reaching its end.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.PosterSource">
            <summary>
            Gets or sets the source used for a default poster effect that is used as background in the default template for MediaPlayer.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.ActualStereo3DVideoPackingMode">
            <summary>
            Gets a value that reports whether the current source media is a stereo 3-D video media file.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Stereo3DVideoPackingMode">
            <summary>
            Gets or sets an enumeration value that determines the stereo 3-D video frame-packing mode for the current media source.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Stereo3DVideoRenderMode">
            <summary>
            Gets or sets an enumeration value that determines the stereo 3-D video render mode for the current media source.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsStereo3DVideo">
            <summary>
            Gets a value that reports whether the current source media is a stereo 3-D video media file.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.RealTimePlayback">
            <summary>
            Gets or sets a value that configures the MediaElement for real-time communications scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.ProtectionManager">
            <summary>
            Gets or sets the dedicated object for media content protection that is associated with this MediaElement.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AudioStreamCount">
            <summary>
            Gets the number of audio streams available in the current media file. The default is 0.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AudioStreamIndex">
            <summary>
            Gets or sets the index of the audio stream that plays along with the video component.
            The collection of audio streams is composed at run time and represents all audio streams available within the media file.
            The index can be unspecified, in which case the value is null.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoPlay">
            <summary>
            Gets or sets a value that indicates whether media will begin playback automatically when the Source property is set.
            Setting to false will still open, download and buffer the media but will pause on the first frame.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.BufferingProgress">
            <summary>
            Gets a value that indicates the current buffering progress.
            The amount of buffering that is completed for media content. The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.CanPause">
            <summary>
            Gets a value indicating if media can be paused if the Pause() method is called.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.CanSeek">
            <summary>
            Gets a value indicating if media can be repositioned by setting the value of the Position property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Balance">
            <summary>
            Gets or sets a ratio of volume across stereo speakers. The ratio of volume across speakers in the range between -1 and 1.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DownloadProgress">
            <summary>
            Gets a percentage value indicating the amount of download completed for content located on a remote server.
            The value ranges from 0 to 1. Multiply by 100 to obtain a percentage.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DownloadProgressOffset">
            <summary>
            Gets the offset of the download progress.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsMuted">
            <summary>
            Gets or sets a value indicating whether the audio is muted.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.NaturalDuration">
            <summary>
            The natural duration of the media. The default value is Duration.Automatic, which is the value held if you query this property before MediaOpened.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.NaturalVideoHeight">
            <summary>
            Gets the height of the video associated with the media.
            The height of the video that is associated with the media, in pixels. Audio files will return 0.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.NaturalVideoWidth">
            <summary>
            Gets the width of the video associated with the media.
            The width of the video associated with the media, in pixels. Audio files will return 0.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.PlaybackRate">
            <summary>
            Gets or sets the playback rate of the media. Use this property to directly control features like fast forward, reverse, and slow motion.
            IncreasePlaybackRate, DecreasePlaybackRate, and IsSlowMotion are also available to help control this.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Position">
            <summary>
            Gets or sets the current position of progress through the media's playback time (or the amount of time since the beginning of the media).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.CurrentState">
            <summary>
            Gets the status of the MediaElement.
            The state can be one of the following (as defined in the MediaElementState enumeration):
            Buffering, Closed, Opening, Paused, Playing, Stopped.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Source">
            <summary>
            Gets or sets a media source on the MediaElement.
            A string that specifies the source of the element, as a Uniform Resource Identifier (URI).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Volume">
            <summary>
            Gets or sets the media's volume.
            The media's volume represented on a linear scale between 0 and 1. The default is 0.5.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.ControlPanel">
            <summary>
            Gets the control panel element.
            HACK: Type is Control instead of ControlPanel because of Win8 bug.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.MediaContainer">
            <summary>
            The main panel of the player that contains all interactive elements.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.InteractivityContainer">
            <summary>
            The main panel of the player that contains all interactive elements.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.LayoutRootElement">
            <summary>
            The main panel of the player that contains all child elements.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.MediaElementElement">
            <summary>
            Gets the underlying MediaElement
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoHideInterval">
            <summary>
            Gets or sets the time before the control will automatically collapse all interactive elements.
            This is only used if AutoHide = true. The default is 3 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.Containers">
            <summary>
            Gets the colleciton of UIElement in the player.
            This is useful for programmatically adding UIElements to the player without having to template the control.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.InteractiveViewModelChanged">
            <summary>
            Occurs when the InteractiveViewModel property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.InteractiveViewModel">
            <summary>
            Gets or sets the view model used by all interactive elements to control playback or report on the status of playback.
            By default this is set to the current object but can be substituted for a custom implementation for supporting features such as advertising.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultInteractiveViewModel">
            <summary>
            This is the default view model and is always retained even after InteractiveViewModel is set.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.InteractiveActivationMode">
            <summary>
            Gets or sets the action that will cause the player to be in interactive mode. (IsInteractive = true)
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.InteractiveDeactivationMode">
            <summary>
            Gets or sets the action that will cause the player to be taken out of interactive mode. (IsInteractive = false)
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoHide">
            <summary>
            Gets or sets if the control panel (and other interactive elements) will automatically be hidden. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.AutoHideBehavior">
            <summary>
            Gets or sets when the control panel (and other interactive elements) will automatically be hidden. Default is AlwaysAllow.
            This is only applicable if AutoHide = true
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.MediaPlayer.IsInteractiveChanged">
            <summary>
            Occurs when the IsInteractive property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.IsInteractive">
            <summary>
            Gest or sets whether the UI used to control playback should be displayed.
            If AutoHide = true, this is automatically set to true when the user interacts in any way with the player and set back to false after a length of time specified by the AutoHideInterval property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.PlayerState">
            <summary>
            Gets the player state. This is is different from the MediaState (CurrentState property) in that it indicates what stage of loading the media the player is in.
            Once the media is loaded, you should use CurrentState to examine the state of the media.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer._Markers">
            <summary>
            Gets the collection of timeline markers associated with the currently loaded media file.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.MediaPlayer.DefaultAudioStreamName">
            <summary>
            Returns the default audio stream name from a localizable resource file.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PluginsFactory">
            <summary>
            A factory class to help encapsulate MEF (Managed Extensibility Framework) to load MMP: Player Framework plugins.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PluginsFactory.Plugins">
            <summary>
            The plugins to get imported.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ViewModelCommands">
            <summary>
            Class used to help bind Xaml to an IInteractiveViewModel
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ViewModelCommands.#ctor">
            <summary>
            Creates a new instance of ViewModelCommands
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ViewModelCommands.ViewModelProperty">
            <summary>
            Identifies the ViewModel dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.PlayResumeCommand">
            <summary>
            The command used to control the PlayResume action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.PauseCommand">
            <summary>
            The command used to control the pause action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.PlayPauseCommand">
            <summary>
            The command used to control the play/pause toggle action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.StopCommand">
            <summary>
            The command used to control the stop action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.ReplayCommand">
            <summary>
            The command used to control the replay (instant replay) action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.AudioSelectionCommand">
            <summary>
            The command used to control the audio stream selection action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.RewindCommand">
            <summary>
            The command used to control the rewind action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.FastForwardCommand">
            <summary>
            The command used to control the fast forward action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.VolumeCommand">
            <summary>
            The command used to control the volume action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.MuteCommand">
            <summary>
            The command used to control the mute action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SlowMotionCommand">
            <summary>
            The command used to control the slow motion action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.CaptionsCommand">
            <summary>
            The command used to control the captiosn action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.FullScreenCommand">
            <summary>
            The command used to control the full screen action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SeekCommand">
            <summary>
            The command used to control the seek action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SkipPreviousCommand">
            <summary>
            The command used to control the skip to the previous marker.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SkipNextCommand">
            <summary>
            The command used to control the skip next marker.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SkipBackCommand">
            <summary>
            The command used to control the skip back (usually 30 seconds) action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.SkipAheadCommand">
            <summary>
            The command used to control the skip ahead (usually 30 seconds) action.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.GoLiveCommand">
            <summary>
            The command used to control the go live action.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.ViewModelCommands.ViewModelChanged">
            <summary>
            Occurs when the ViewModel property changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.ViewModel">
            <summary>
            Gets or sets if the command used for databinding with user interactive features.
            You can set this property to create custom behaviors from plugins or your application.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ViewModelCommands.FavorPlayResume">
            <summary>
            Gets whether the play/PlayResume action could be used. Sometimes both the PlayResume and Pause commands can make sense such as when fast forwarding.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.ViewModelCommands.PropertyChanged">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.BoolToVisibilityConverter">
            <summary>
            IValueConverter used to help Xaml bind a boolean to a Visibility property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.#ctor">
            <summary>
            Instantiates a new instance of the BoolToVisibilityConverter class.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.#ctor(System.Boolean)">
            <summary>
            Instantiates a new instance of the BoolToVisibilityConverter class and allows you to pass in the inverse value.
            </summary>
            <param name="inverse">A flag indicating whether or not the value should be flipped so false == Visible</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.Convert(System.Boolean,System.Boolean)">
            <summary>
            Converts a boolean to a Visibility enum
            </summary>
            <param name="value">the boolean to convert</param>
            <param name="inverse">A flag indicating whether or not the value should be flipped so false == Visible.</param>
            <returns>Visibility enum</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.ConvertBack(Windows.UI.Xaml.Visibility,System.Boolean)">
            <summary>
            Converts a Visibility enum to a boolean
            </summary>
            <param name="value">The Visibility enum to convert</param>
            <param name="inverse">A flag indicating whether or not the value should be flipped so false == Visible.</param>
            <returns>A boolean value</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.BoolToVisibilityConverter.Inverse">
            <summary>
            A flag indicating whether or not the value should be flipped so false == Visible. Default false (true = Visible).
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ConditionalConverter">
            <summary>
            IValueConverter implementation used to return a unique result depending on boolean input.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ConditionalConverter.ValueTrueProperty">
            <summary>
            Identifies the ValueTrue dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ConditionalConverter.ValueFalseProperty">
            <summary>
            Identifies the ValueFalse dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ConditionalConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.ConditionalConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.ConditionalConverter.ValueTrue">
            <summary>
            Gets or sets the value to return if the input is true.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ConditionalConverter.ValueFalse">
            <summary>
            Gets or sets the value to return if the input is false.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ConditionalVisibilityConverter">
            <summary>
            IValueConverter implementation to compare the value with the parameter and return a Visibility enum based on the result.
            True = Visible, False = Collapsed
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ConditionalVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.ConditionalVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.IsNullConverter">
            <summary>
            IValueConverter used to help Xaml determine if the value is null
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.IsNullConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.IsNullConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.MulticastConverter">
            <summary>
            IValueConverter impelmentation that converts a value by passing it through a list of other converters.
            The result of converter 1 is passed to converter 2 and so on.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MulticastConverter.#ctor(System.Collections.Generic.IEnumerable{Windows.UI.Xaml.Data.IValueConverter})">
            <summary>
            Creates a new instance of MulticastConverter while initializing the child converters.
            </summary>
            <param name="converters">The child converters.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.MulticastConverter.#ctor">
            <summary>
            Creates a new instance of MulticastConverter.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.MulticastConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.MulticastConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.MulticastConverter.Converters">
            <summary>
            A list of child converters used to convert the value.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.NotConverter">
            <summary>
            IValueConverter used to help Xaml flip the value when binding a boolean to a boolean.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.NotConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.NotConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.ResourceConverter">
            <summary>
            IValueConverter implementation used to return and format a resource.
            The value determines the format and the param determines the resource file key.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ResourceConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.ResourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.StringFormatConverter">
            <summary>
            IValueConverter used to help Xaml format an object before binding it to a string.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.StringFormatConverter.StringFormatProperty">
            <summary>
            StringFormat DependencyProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.StringFormatConverter.StringFormat">
            <summary>
            Gets or sets the string format to use.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.TargetNullValueConverter">
            <summary>
            Returns the parameter instead of the value if the value is null. Offers a good substitution for the TargetNullValue param on bindings in Silverlight or WPF
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TargetNullValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.TargetNullValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.TimeUnit">
            <summary>
            An enum indicating a specific unit of Time.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TimeUnit.Days">
            <summary>
            Total days unit
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TimeUnit.Hours">
            <summary>
            Total hours unit
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TimeUnit.Minutes">
            <summary>
            Total minutes unit
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TimeUnit.Seconds">
            <summary>
            Total seconds unit
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.TimeUnit.Milliseconds">
            <summary>
            Total milliseconds unit
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.TimeUnitConverter">
            <summary>
            IValueConverter used to help Xaml bind a TimeSpan to an double by pulling out a specific unit of the TimeSpan.
            For example, 00:01:10 could be converted to 70 if TimeUnit == Seconds.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.#ctor">
            <summary>
            Instantiates a new instance of the TimeSpanPartConverter class, defaulting the TimeUnit to Seconds.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.#ctor(Microsoft.PlayerFramework.TimeUnit)">
            <summary>
            Instantiates a new instance of the TimeSpanPartConverter class.
            </summary>
            <param name="timeSpanPart">Enum indicating which unit of time to convert to.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.Convert(System.TimeSpan,Microsoft.PlayerFramework.TimeUnit)">
            <summary>
            Converts the TimeSpan to an double.
            </summary>
            <param name="value">The TimeSpan to convert</param>
            <param name="timeUnit">The unit of the TimeSpan to use.</param>
            <returns>A double representing the total time of the TimeSpan.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.ConvertBack(System.Double,Microsoft.PlayerFramework.TimeUnit)">
            <summary>
            Converts a double to a TimeSpan.
            </summary>
            <param name="value">The value in the specified units to convert.</param>
            <param name="timeUnit">The unit to use when converting the number to a TimeSpan.</param>
            <returns>A TimeSpan that represents the given time.</returns>
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.TimeUnitConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.TimeUnitConverter.TimeUnit">
            <summary>
            The unit of the TimeSpan that should be used during conversion.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ToggleButtonExtensions">
            <summary>
            Provides an attached property for ToggleButtons to provide alternate button content when checked.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ToggleButtonExtensions.CheckedContentProperty">
            <summary>
            Identifies the CheckedContent dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ToggleButtonExtensions.SetCheckedContent(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the content for the toggle button when in a checked state.
            </summary>
            <param name="obj">The toggle button to set the alternate content on.</param>
            <param name="propertyValue">The alternate content. Must be type UIElement.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.ToggleButtonExtensions.GetCheckedContent(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the content for the toggle button when in a checked state.
            </summary>
            <param name="obj">The toggle button to get the alternate content on.</param>
            <returns>The alternate content. Should be type UIElement.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.InteractionEventArgs">
            <summary>
            Provides information about the interaction that occurred.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.InteractionEventArgs.#ctor(Microsoft.PlayerFramework.InteractionType)">
            <summary>
            Creates a new instance of the InteractionEventArgs
            </summary>
            <param name="interactionType">The type of interaction that occurred.</param>
        </member>
        <member name="P:Microsoft.PlayerFramework.InteractionEventArgs.InteractionType">
            <summary>
            The type of interaction that occurred.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.BufferingPlugin">
            <summary>
            A plugin used to show the user that the media is buffering.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.BufferingPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.BufferingPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.BufferingPlugin.BufferingViewStyle">
            <summary>
            Gets or sets the style to be used for the BufferingView
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.BufferingView">
            <summary>
            A control that indicates buffering is occuring.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.BufferingView.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.BufferingView.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="F:Microsoft.PlayerFramework.BufferingView.ViewModelProperty">
            <summary>
            Identifies the MediaPlayer dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.BufferingView.ViewModel">
            <summary>
            The InteractiveMediaPlayer object used to provide state updates and serve user interaction requests.
            This is usually an instance of the MediaPlayer but could be a custom implementation to support unique interaction such as in the case of advertising.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.CaptionSelectorPlugin">
            <summary>
            A plugin used to allow the user 
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.CaptionSelectorPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.CaptionSelectorPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.CaptionSelectorPlugin.CaptionSelectorViewStyle">
            <summary>
            Gets or sets the style to be used for the CaptionSelectorView
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.CaptionSelectorView">
            <summary>
            A control that allows the user to select which captions they want or to turn off closed captioning.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.CaptionSelectorView.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.CaptionSelectorView.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.CaptionSelectorView.Close">
            <summary>
            Indicates the caption selector view should be closed.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ChaptersPlugin">
            <summary>
            An plugin responsible for turning MediaElement markers into visual markers that can be seen in the timeline.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ChaptersPlugin.#ctor">
            <summary>
            Creates a new instance of the ChaptersPlugin
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ChaptersPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.ChaptersPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.ChaptersPlugin.ChapterMarkerType">
            <summary>
            Gets or sets whether or not captions are enabled
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ChaptersPlugin.MarkerStyle">
            <summary>
            Gets or sets whether or not captions are enabled
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.AudioSelectionPlugin">
            <summary>
            A plugin used to allow the user 
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioSelectionPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioSelectionPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.AudioSelectionPlugin.AudioSelectionViewStyle">
            <summary>
            Gets or sets the style to be used for the CaptionSelectorView
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.AudioSelectionView">
            <summary>
            A control that allows the user to select which captions they want or to turn off closed captioning.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioSelectionView.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioSelectionView.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.AudioSelectionView.Close">
            <summary>
            Indicates the caption selector view should be closed.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ErrorPlugin">
            <summary>
            A plugin used to show the user that an error occurred.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ErrorPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.ErrorPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.ErrorPlugin.ErrorViewStyle">
            <summary>
            Gets or sets the style to be used for the ErrorView
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ErrorView">
            <summary>
            A control that indicates an error has occurred.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.ErrorView.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.ErrorView.RetryCommandProperty">
            <summary>
            Identifies the RetryCommand dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ErrorView.RetryCommand">
            <summary>
            Gets or sets the command used to retry after the error occurred.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.LoaderPlugin">
            <summary>
            A plugin used to display a UI with a play button on it to let the user choose to load the media.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.LoaderPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.LoaderPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.LoaderPlugin.LoaderViewStyle">
            <summary>
            Gets or sets the style to be used for the ErrorView
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.LoaderView">
            <summary>
            A control that is used to kick off the loading of media.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.LoaderView.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.LoaderView.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.LoaderView.Command">
            <summary>
            Gets or sets if the command used for databinding with user interactive features.
            You can set this property to create custom behaviors from plugins or your application.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.Tracking">
            <summary>
            Helper class used to attach config data specific to each playlist item.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.Tracking.TrackingEventsProperty">
            <summary>
            Identifies the TrackingEvents attached property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.Tracking.SetTrackingEvents(Windows.UI.Xaml.DependencyObject,Microsoft.PlayerFramework.TrackingEventCollection)">
            <summary>
            Sets the TrackingEvents attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
            <param name="propertyValue">A value containing the TrackingEvents to apply to the plugin.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.Tracking.GetTrackingEvents(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the TrackingEvents attached property value.
            </summary>
            <param name="obj">An instance of the MediaPlayer or PlaylistItem.</param>
            <returns>A value containing the TrackingEvents to apply to the plugin.</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.TrackingEventCollection">
            <summary>
            A collection class containing the TrackingEvent objects associated with a PlaylistItem
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionTrackingPlugin">
            <summary>
            A plugin used to help track when specific events occur during playback.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionTrackingPlugin.MarkerType_TrackingEvent">
            <summary>
            The TimelineMarker ID used to store tracking events.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionTrackingPlugin.EvaluateOnForwardOnlyProperty">
            <summary>
            Identifies the EvaluateOnForwardOnly dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionTrackingPlugin.InitializeTrackingEvent(Microsoft.PlayerFramework.PositionTrackingEvent)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionTrackingPlugin.UninitializeTrackingEvent(Microsoft.PlayerFramework.PositionTrackingEvent)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionTrackingPlugin.OnActivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionTrackingPlugin.OnDeactivate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionTrackingPlugin.EvaluateMarkers(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Evaluates all markers in a window and plays an ad if applicable.
            </summary>
            <param name="originalPosition">The window start position.</param>
            <param name="newPosition">The window end position. Note: This can be before originalPosition if going backwards.</param>
            <param name="isSeeking">A flag indicating that the user is actively seeking</param>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionTrackingPlugin.EvaluateOnForwardOnly">
            <summary>
            Gets or sets whether seeking or scrubbing back in time can trigger ads. Set to false to allow ads to be played when seeking backwards. Default is true.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionTrackingEvent">
            <summary>
            Used to identify and track when the media reaches a specific position.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionTrackingEvent.Position">
            <summary>
            Gets or sets the playback position when the tracking event will fire.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionTrackingEvent.PositionPercentage">
            <summary>
            Gets or sets the percentage of time compared to the duration of the playback position when the tracking event will fire.
            .5 = 50%, 2 = 200%
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionEventTrackedEventArgs">
            <summary>
            Contains additional information about a tracking event that has occurred.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionEventTrackedEventArgs.#ctor">
            <summary>
            Creates a new instance of PositionEventTrackedEventArgs
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionEventTrackedEventArgs.#ctor(Microsoft.PlayerFramework.PositionTrackingEvent)">
            <summary>
            Creates a new instance of PositionEventTrackedEventArgs
            </summary>
            <param name="trackingEvent">The event that was tracked</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionEventTrackedEventArgs.#ctor(Microsoft.PlayerFramework.PositionTrackingEvent,System.Boolean)">
            <summary>
            Creates a new instance of EventTrackedEventArgs
            </summary>
            <param name="trackingEvent">The event that was tracked</param>
            <param name="skippedPast">A flag indicating whether or not the user was seeking when the event occurred</param>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionEventTrackedEventArgs.SkippedPast">
            <summary>
            Gets a flag indicating whether or not the user was seeking or scrubbing when the event occurred.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.Caption">
            <summary>
            Represents a caption or subtitle track.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.Caption.OnPayloadChanged">
            <summary>
            Invokes the PayloadChanged event
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.Caption.DescriptionProperty">
            <summary>
            Description DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.Caption.PayloadProperty">
            <summary>
            Payload DependencyProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.Caption.ToString">
            <inheritdoc /> 
        </member>
        <member name="E:Microsoft.PlayerFramework.Caption.PayloadChanged">
            <summary>
            Indicates that the Payload property has changed
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.Caption.Description">
            <summary>
            Gets or sets the description of the caption track.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.Caption.Payload">
            <summary>
            Gets or sets the payload of the caption track. This can be any object.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.Caption.Source">
            <summary>
            Gets or sets the source Uri for the timed text. Useful for Xaml binding
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.AudioStream">
            <summary>
            Represents an audio stream.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioStream.#ctor">
            <summary>
            Creates a new instance of AudioStream
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioStream.#ctor(System.String)">
            <summary>
            Creates a new instance of AudioStream
            </summary>
            <param name="name">The name of the audio stream</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioStream.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of AudioStream
            </summary>
            <param name="name">The name of the audio stream</param>
            <param name="language">The language of the audio stream</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.AudioStream.ToString">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.AudioStream.Name">
            <summary>
            Gets or sets the name of the audio stream.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.AudioStream.Language">
            <summary>
            Gets or sets the Language of the audio stream.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.DeselectableListBox">
            <summary>
            A control that acts like a list box but presents a separate option for unselecting to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DeselectableListBox.#ctor">
            <summary>
            Creates a new instance of DeselectableListBox.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DeselectableListBox.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="F:Microsoft.PlayerFramework.DeselectableListBox.ItemsSourceProperty">
            <summary>
            ItemsSource DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.DeselectableListBox.SelectedItemProperty">
            <summary>
            SelectedItem DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.DeselectableListBox.DeselectedItemProperty">
            <summary>
            DeselectedItem DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.DeselectableListBox.ItemTemplateProperty">
            <summary>
            ItemTemplate DependencyProperty definition.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.ListBox">
            <summary>
            The internal instance listbox used by this control to display the items.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.DeselectableListBox.SelectionChanged">
            <summary>
            Indicates the selection has changed.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.ItemsSource">
            <summary>
            Gets or sets the collection of items to be used as the item source.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.DeselectedItem">
            <summary>
            Gets or sets the item that is used to indicate nothing is selected.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.ItemTemplate">
            <summary>
            Gets or sets the item template to be used to display each item in the list.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.DeselectableListBox.EnumerableWrapper.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new instance of EnumerableWrapper.
            </summary>
            <param name="Items">The collection of items to wrap.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.DeselectableListBox.EnumerableWrapper.GetEnumerator">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.EnumerableWrapper.StartingItem">
            <summary>
            Gets or sets the starting item of the collection
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.DeselectableListBox.EnumerableWrapper.IncludeStartingItem">
            <summary>
            Gets or sets whether or not to include StartingItem in the collection.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.DeselectableListBox.EnumerableWrapper.CollectionChanged">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.PlaylistItem">
            <summary>
            Represents a media item in a playlist.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistItem.#ctor">
            <summary>
            Creates a new instance of the PlaylistItem class.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.ProtectionManagerProperty">
            <summary>
            Identifies the ProtectionManager dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.Stereo3DVideoPackingModeProperty">
            <summary>
            Identifies the Stereo3DVideoPackingMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.Stereo3DVideoRenderModeProperty">
            <summary>
            Identifies the Stereo3DVideoRenderMode dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.PosterSourceProperty">
            <summary>
            Identifies the PosterSource dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.AutoLoadProperty">
            <summary>
            Identifies the AutoLoad dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.AutoPlayProperty">
            <summary>
            Identifies the AutoPlay dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.StartupPositionProperty">
            <summary>
            Identifies the StartupPosition dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.SourceUriProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.AvailableAudioStreamsProperty">
            <summary>
            Identifies the AudioStreamNames dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.VisualMarkersProperty">
            <summary>
            Identifies the VisualMarkers dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistItem.AvailableCaptionsProperty">
            <summary>
            Identifies the AvailableCaptions dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.ProtectionManager">
            <summary>
            Gets or sets the dedicated object for media content protection that is associated with this PlaylistItem.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Stereo3DVideoPackingMode">
            <summary>
            Gets or sets the stereo video mode to use for display.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Stereo3DVideoRenderMode">
            <summary>
            Gets or sets the stereo video mode to use for display.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.PosterSource">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.AutoLoad">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.AutoPlay">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.StartupPosition">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Source">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.SourceUri">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.AvailableAudioStreams">
            <summary>
            Gets or sets the list of audio stream names.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Microsoft#PlayerFramework#IMediaSource#AvailableAudioStreams">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.VisualMarkers">
            <summary>
            Gets or sets the list of timeline markers to display in the timeline.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Microsoft#PlayerFramework#IMediaSource#VisualMarkers">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.AvailableCaptions">
            <summary>
            Gets or sets the list of captions that can be chosen by the user.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Microsoft#PlayerFramework#IMediaSource#AvailableCaptions">
            <inheritdoc /> 
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistItem.Player">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.PlaylistPlugin">
            <summary>
            An plugin responsible for maintaining a playlist of media.
            The playlist items are automatically loaded into the MediaElement at the appropriate times.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistPlugin.#ctor">
            <summary>
            Creates a new instance of PlaylistPlugin.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.PlaylistProperty">
            <summary>
            Playlist DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.AutoAdvanceProperty">
            <summary>
            AutoAdvance DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.AutoLoadProperty">
            <summary>
            AutoLoad DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.SkipBackThresholdProperty">
            <summary>
            SkipBackThreshold DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.CurrentPlaylistItemProperty">
            <summary>
            CurrentPlaylistItem DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.PreviousPlaylistItemProperty">
            <summary>
            PreviousPlaylistItem DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PlaylistPlugin.NextPlaylistItemProperty">
            <summary>
            NextPlaylistItem DependencyProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistPlugin.GoToPreviousPlaylistItem">
            <summary>
            Advances to the previous playlist item.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistPlugin.GoToNextPlaylistItem">
            <summary>
            Advances to the next playlist item.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistPlugin.UpdateMediaSource(Microsoft.PlayerFramework.MediaPlayer,Microsoft.PlayerFramework.IMediaSource)">
            <summary>
            Updates the media source on the player. This is called internally when a new playlist item is selected.
            </summary>
            <param name="mediaPlayer">The MediaPlayer to load the media source (playlist item) into.</param>
            <param name="mediaSource">The new media source (this is usually a PlaylistItem object).</param>
        </member>
        <member name="E:Microsoft.PlayerFramework.PlaylistPlugin.CurrentPlaylistItemChanged">
            <summary>
            Occurs when the CurrentPlaylistItem changes.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.Playlist">
            <summary>
            Gets a list of media items to play.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.AutoAdvance">
            <summary>
            Determines whether the next PlaylistItem should be automatically loaded when a PlaylistItem has ended. AutoPlay is still used to determine whether or not that next PlaylistItem should automatically start playing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.AutoLoad">
            <summary>
            Gets a list of media items to play.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.SkipBackThreshold">
            <summary>
            The amount of time into the media after which a skip back operation is treated as a reset (vs. going to the previous playlist item).
            If not set, skip back will always reset the video intead of going to the previous playlist item.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.CurrentPlaylistItem">
            <summary>
            Gets the current PlaylistItem.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.PreviousPlaylistItem">
            <summary>
            Returns the PlaylistItem directly before the CurrentPlaylistItem (or null if none exist).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.NextPlaylistItem">
            <summary>
            Returns the PlaylistItem directly after the CurrentPlaylistItem (or null if none exist).
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.Microsoft#PlayerFramework#IPlugin#MediaPlayer">
            <summary>
            The current MediaPlayer
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PlaylistPlugin.CurrentPlaylistItemIndex">
            <summary>
            Gets or sets the index of the new playlist item.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PlaylistPluginExtensions">
            <summary>
             Helper class used to provide extension methods for the playlist plugin.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PlaylistPluginExtensions.GetPlaylistPlugin(Microsoft.PlayerFramework.MediaPlayer)">
            <summary>
            A helper method to return the instance of the PlaylistPlugin associated with a MediaPlayer instance.
            </summary>
            <param name="source">The instance of MediaPlayer to return the associated PlaylistPlugin.</param>
            <returns>The instance of the PlaylistPlugin associated with the MediaPlayer</returns>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionedItemsControl">
            <summary>
            An ItemsControl used to position items in a linear path based on relative coordinates (defined by attached properties).
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.PositionedItemsPanel">
            <summary>
            A panel used to position the children items in a linear path based on relative coordinates (defined by attached properties).
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.MinimumProperty">
            <summary>
            Minimum DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.MaximumProperty">
            <summary>
            Maximum DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.MaxPositionProperty">
            <summary>
            MaxPosition DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.MinPositionProperty">
            <summary>
            MinPosition DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.DisplayAllItemsProperty">
            <summary>
            DisplayAllItemsProperty DependencyProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionedItemsPanel.MeasureOverride(Windows.Foundation.Size)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionedItemsPanel.ArrangeOverride(Windows.Foundation.Size)">
            <inheritdoc /> 
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsPanel.PositionProperty">
            <summary>
            Position AttachedProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionedItemsPanel.SetPosition(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Sets the position on an item.
            </summary>
            <param name="obj">The object to set the position on.</param>
            <param name="propertyValue">The position of the object.</param>
        </member>
        <member name="M:Microsoft.PlayerFramework.PositionedItemsPanel.GetPosition(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the position on an item.
            </summary>
            <param name="obj">The object to retrieve the position from.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsPanel.Minimum">
            <summary>
            Gets or sets the minimum position of the items.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsPanel.Maximum">
            <summary>
            Gets or sets the maximum position of the items.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsPanel.MaxPosition">
            <summary>
            Gets or sets the max position.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsPanel.MinPosition">
            <summary>
            Gets or sets the min position.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsPanel.DisplayAllItems">
            <summary>
            Gets or sets whether items outside the MinPosition and MaxPosition are displayed
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsControl.ItemsSourceProperty">
            <summary>
            ItemsSource DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.PositionedItemsControl.ItemTemplateProperty">
            <summary>
            ItemTemplate DependencyProperty definition.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsControl.ItemsSource">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.PositionedItemsControl.ItemTemplate">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.SeekableSlider">
            <summary>
            Represents a control that shows a visual indicator of the duration of the current media and current position.
            </summary>
            <remarks>
            The Timeline keeps track of the current position, start position, and end position. 
            </remarks>
        </member>
        <member name="M:Microsoft.PlayerFramework.SeekableSlider.#ctor">
            <summary>
            Instantiates a new instance of the SeekableSlider class.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.SeekableSlider.OnValueChanged(System.Double,System.Double)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.SeekableSlider.OnMaximumChanged(System.Double,System.Double)">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.SeekableSlider.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="F:Microsoft.PlayerFramework.SeekableSlider.MarkerTemplateProperty">
            <summary>
            MarkerTemplate DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.SeekableSlider.MarkersProperty">
            <summary>
            Markers DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.SeekableSlider.ActualValueProperty">
            <summary>
            ActualValue DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.SeekableSlider.MaxValueProperty">
            <summary>
            MaxValue DependencyProperty definition.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.SeekableSlider.CancelScrub">
            <summary>
            Cancels the active scrub
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.IsScrubbing">
            <summary>
            Gets or sets whether the timeline is scrubbing.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.SeekableSlider.ScrubbingStarted">
            <summary>
            Occurs when the user begins scrubbing.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.SeekableSlider.Scrubbing">
            <summary>
            Occurs when the user scrubs.
            </summary>
        </member>
        <member name="E:Microsoft.PlayerFramework.SeekableSlider.ScrubbingCompleted">
            <summary>
            Occurs when the user completes scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.AvailableBar">
            <summary>
            The bar used to restrict the available area that can be scrubbed to.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.Panel">
            <summary>
            The Panel used to host the control.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.Thumb">
            <summary>
            The thumb used to allow the user to seek.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.MarkerTemplate">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.Markers">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.ActualValue">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.SeekableSlider.MaxValue">
            <summary>
            Gets or sets the max position of the timeline.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.ValueRoutedEventArgs">
            <summary>
            EventArgs class to return a double.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.ValueRoutedEventArgs.Value">
            <summary>
            The value associated with the event.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.SignalStrength">
            <summary>
            A control to display the signal strength for adaptive streaming.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.SignalStrength.#ctor">
            <summary>
            Creates a new instance of SignalStrength
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.SignalStrength.OnApplyTemplate">
            <inheritdoc /> 
        </member>
        <member name="M:Microsoft.PlayerFramework.SignalStrength.OnValueChanged(System.Double,System.Double)">
            <inheritdoc /> 
        </member>
        <member name="T:Microsoft.PlayerFramework.VisualMarker">
            <summary>
            Represents a marker to appear visually in the timeline.
            </summary>
        </member>
        <member name="M:Microsoft.PlayerFramework.VisualMarker.#ctor">
            <summary>
            Creates a new instance of VisualMarker
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.VisualMarker.TextProperty">
            <summary>
            Text DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.VisualMarker.TimeProperty">
            <summary>
            Time DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.VisualMarker.IsSeekableProperty">
            <summary>
            IsSeekable DependencyProperty definition.
            </summary>
        </member>
        <member name="F:Microsoft.PlayerFramework.VisualMarker.StyleProperty">
            <summary>
            Style DependencyProperty definition.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.VisualMarker.Text">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.VisualMarker.Time">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.VisualMarker.IsSeekable">
            <summary>
            Gets or sets the actual value of the slider to be able to maintain the value of the slider while the user is scrubbing.
            </summary>
        </member>
        <member name="P:Microsoft.PlayerFramework.VisualMarker.Style">
            <summary>
            Gets or sets the style of the button to show in the timeline.
            </summary>
        </member>
        <member name="T:Microsoft.PlayerFramework.NamespaceDoc">
            <summary> 
            Microsoft Media Platform Player Framework primary namespace.
            </summary> 
        </member>
    </members>
</doc>
